c5d450f02a8b588fec0a512907d35ea4
'use strict';

exports.__esModule = true;
exports.default = void 0;

var _AnimatedInterpolation = _interopRequireDefault(require("./AnimatedInterpolation"));

var _AnimatedNode = _interopRequireDefault(require("./AnimatedNode"));

var _AnimatedValue = _interopRequireDefault(require("./AnimatedValue"));

var _AnimatedWithChildren2 = _interopRequireDefault(require("./AnimatedWithChildren"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;

  _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

var AnimatedSubtraction = function (_AnimatedWithChildren) {
  _inheritsLoose(AnimatedSubtraction, _AnimatedWithChildren);

  function AnimatedSubtraction(a, b) {
    var _this;

    _this = _AnimatedWithChildren.call(this) || this;
    _this._a = typeof a === 'number' ? new _AnimatedValue.default(a) : a;
    _this._b = typeof b === 'number' ? new _AnimatedValue.default(b) : b;
    return _this;
  }

  var _proto = AnimatedSubtraction.prototype;

  _proto.__makeNative = function __makeNative() {
    this._a.__makeNative();

    this._b.__makeNative();

    _AnimatedWithChildren.prototype.__makeNative.call(this);
  };

  _proto.__getValue = function __getValue() {
    return this._a.__getValue() - this._b.__getValue();
  };

  _proto.interpolate = function interpolate(config) {
    return new _AnimatedInterpolation.default(this, config);
  };

  _proto.__attach = function __attach() {
    this._a.__addChild(this);

    this._b.__addChild(this);
  };

  _proto.__detach = function __detach() {
    this._a.__removeChild(this);

    this._b.__removeChild(this);

    _AnimatedWithChildren.prototype.__detach.call(this);
  };

  _proto.__getNativeConfig = function __getNativeConfig() {
    return {
      type: 'subtraction',
      input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
    };
  };

  return AnimatedSubtraction;
}(_AnimatedWithChildren2.default);

var _default = AnimatedSubtraction;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFuaW1hdGVkU3VidHJhY3Rpb24uanMiXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiX0FuaW1hdGVkSW50ZXJwb2xhdGlvbiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX0FuaW1hdGVkTm9kZSIsIl9BbmltYXRlZFZhbHVlIiwiX0FuaW1hdGVkV2l0aENoaWxkcmVuMiIsIm9iaiIsIl9pbmhlcml0c0xvb3NlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJfc2V0UHJvdG90eXBlT2YiLCJvIiwicCIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiQW5pbWF0ZWRTdWJ0cmFjdGlvbiIsIl9BbmltYXRlZFdpdGhDaGlsZHJlbiIsImEiLCJiIiwiX3RoaXMiLCJjYWxsIiwiX2EiLCJfYiIsIl9wcm90byIsIl9fbWFrZU5hdGl2ZSIsIl9fZ2V0VmFsdWUiLCJpbnRlcnBvbGF0ZSIsImNvbmZpZyIsIl9fYXR0YWNoIiwiX19hZGRDaGlsZCIsIl9fZGV0YWNoIiwiX19yZW1vdmVDaGlsZCIsIl9fZ2V0TmF0aXZlQ29uZmlnIiwidHlwZSIsImlucHV0IiwiX19nZXROYXRpdmVUYWciLCJfZGVmYXVsdCIsIm1vZHVsZSJdLCJtYXBwaW5ncyI6IkFBU0E7O0FBRUFBLE9BQU8sQ0FBQ0MsVUFBUixHQUFxQixJQUFyQjtBQUNBRCxPQUFPLENBQUNFLE9BQVIsR0FBa0IsS0FBSyxDQUF2Qjs7QUFFQSxJQUFJQyxzQkFBc0IsR0FBR0Msc0JBQXNCLENBQUNDLE9BQU8sMkJBQVIsQ0FBbkQ7O0FBRUEsSUFBSUMsYUFBYSxHQUFHRixzQkFBc0IsQ0FBQ0MsT0FBTyxrQkFBUixDQUExQzs7QUFFQSxJQUFJRSxjQUFjLEdBQUdILHNCQUFzQixDQUFDQyxPQUFPLG1CQUFSLENBQTNDOztBQUVBLElBQUlHLHNCQUFzQixHQUFHSixzQkFB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Q0FBQ08sUUFBUCxHQUFrQixTQUFTQSxRQUFULEdBQW9CO0FBQ3BDLFNBQUtULEVBQUwsQ0FBUVUsYUFBUixDQUFzQixJQUF0Qjs7QUFFQSxTQUFLVCxFQUFMLENBQVFTLGFBQVIsQ0FBc0IsSUFBdEI7O0FBRUFmLElBQUFBLHFCQUFxQixDQUFDVixTQUF0QixDQUFnQ3dCLFFBQWhDLENBQXlDVixJQUF6QyxDQUE4QyxJQUE5QztBQUNELEdBTkQ7O0FBUUFHLEVBQUFBLE1BQU0sQ0FBQ1MsaUJBQVAsR0FBMkIsU0FBU0EsaUJBQVQsR0FBNkI7QUFDdEQsV0FBTztBQUNMQyxNQUFBQSxJQUFJLEVBQUUsYUFERDtBQUVMQyxNQUFBQSxLQUFLLEVBQUUsQ0FBQyxLQUFLYixFQUFMLENBQVFjLGNBQVIsRUFBRCxFQUEyQixLQUFLYixFQUFMLENBQVFhLGNBQVIsRUFBM0I7QUFGRixLQUFQO0FBSUQsR0FMRDs7QUFPQSxTQUFPcEIsbUJBQVA7QUFDRCxDQXBEc0MsQ0FvRHJDZCxzQkFBc0IsQ0FBQ04sT0FwRGMsQ0FBdkM7O0FBc0RBLElBQUl5QyxRQUFRLEdBQUdyQixtQkFBZjtBQUNBdEIsT0FBTyxDQUFDRSxPQUFSLEdBQWtCeUMsUUFBbEI7QUFDQUMsTUFBTSxDQUFDNUMsT0FBUCxHQUFpQkEsT0FBTyxDQUFDRSxPQUF6QiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKiBAZm9ybWF0XG4gKi9cbid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9BbmltYXRlZEludGVycG9sYXRpb24gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL0FuaW1hdGVkSW50ZXJwb2xhdGlvblwiKSk7XG5cbnZhciBfQW5pbWF0ZWROb2RlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9BbmltYXRlZE5vZGVcIikpO1xuXG52YXIgX0FuaW1hdGVkVmFsdWUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL0FuaW1hdGVkVmFsdWVcIikpO1xuXG52YXIgX0FuaW1hdGVkV2l0aENoaWxkcmVuMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vQW5pbWF0ZWRXaXRoQ2hpbGRyZW5cIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTsgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7IF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH1cblxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH1cblxudmFyIEFuaW1hdGVkU3VidHJhY3Rpb24gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9BbmltYXRlZFdpdGhDaGlsZHJlbikge1xuICBfaW5oZXJpdHNMb29zZShBbmltYXRlZFN1YnRyYWN0aW9uLCBfQW5pbWF0ZWRXaXRoQ2hpbGRyZW4pO1xuXG4gIGZ1bmN0aW9uIEFuaW1hdGVkU3VidHJhY3Rpb24oYSwgYikge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX0FuaW1hdGVkV2l0aENoaWxkcmVuLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICBfdGhpcy5fYSA9IHR5cGVvZiBhID09PSAnbnVtYmVyJyA/IG5ldyBfQW5pbWF0ZWRWYWx1ZS5kZWZhdWx0KGEpIDogYTtcbiAgICBfdGhpcy5fYiA9IHR5cGVvZiBiID09PSAnbnVtYmVyJyA/IG5ldyBfQW5pbWF0ZWRWYWx1ZS5kZWZhdWx0KGIpIDogYjtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gQW5pbWF0ZWRTdWJ0cmFjdGlvbi5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLl9fbWFrZU5hdGl2ZSA9IGZ1bmN0aW9uIF9fbWFrZU5hdGl2ZSgpIHtcbiAgICB0aGlzLl9hLl9fbWFrZU5hdGl2ZSgpO1xuXG4gICAgdGhpcy5fYi5fX21ha2VOYXRpdmUoKTtcblxuICAgIF9BbmltYXRlZFdpdGhDaGlsZHJlbi5wcm90b3R5cGUuX19tYWtlTmF0aXZlLmNhbGwodGhpcyk7XG4gIH07XG5cbiAgX3Byb3RvLl9fZ2V0VmFsdWUgPSBmdW5jdGlvbiBfX2dldFZhbHVlKCkge1xuICAgIHJldHVybiB0aGlzLl9hLl9fZ2V0VmFsdWUoKSAtIHRoaXMuX2IuX19nZXRWYWx1ZSgpO1xuICB9O1xuXG4gIF9wcm90by5pbnRlcnBvbGF0ZSA9IGZ1bmN0aW9uIGludGVycG9sYXRlKGNvbmZpZykge1xuICAgIHJldHVybiBuZXcgX0FuaW1hdGVkSW50ZXJwb2xhdGlvbi5kZWZhdWx0KHRoaXMsIGNvbmZpZyk7XG4gIH07XG5cbiAgX3Byb3RvLl9fYXR0YWNoID0gZnVuY3Rpb24gX19hdHRhY2goKSB7XG4gICAgdGhpcy5fYS5fX2FkZENoaWxkKHRoaXMpO1xuXG4gICAgdGhpcy5fYi5fX2FkZENoaWxkKHRoaXMpO1xuICB9O1xuXG4gIF9wcm90by5fX2RldGFjaCA9IGZ1bmN0aW9uIF9fZGV0YWNoKCkge1xuICAgIHRoaXMuX2EuX19yZW1vdmVDaGlsZCh0aGlzKTtcblxuICAgIHRoaXMuX2IuX19yZW1vdmVDaGlsZCh0aGlzKTtcblxuICAgIF9BbmltYXRlZFdpdGhDaGlsZHJlbi5wcm90b3R5cGUuX19kZXRhY2guY2FsbCh0aGlzKTtcbiAgfTtcblxuICBfcHJvdG8uX19nZXROYXRpdmVDb25maWcgPSBmdW5jdGlvbiBfX2dldE5hdGl2ZUNvbmZpZygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogJ3N1YnRyYWN0aW9uJyxcbiAgICAgIGlucHV0OiBbdGhpcy5fYS5fX2dldE5hdGl2ZVRhZygpLCB0aGlzLl9iLl9fZ2V0TmF0aXZlVGFnKCldXG4gICAgfTtcbiAgfTtcblxuICByZXR1cm4gQW5pbWF0ZWRTdWJ0cmFjdGlvbjtcbn0oX0FuaW1hdGVkV2l0aENoaWxkcmVuMi5kZWZhdWx0KTtcblxudmFyIF9kZWZhdWx0ID0gQW5pbWF0ZWRTdWJ0cmFjdGlvbjtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7Il19