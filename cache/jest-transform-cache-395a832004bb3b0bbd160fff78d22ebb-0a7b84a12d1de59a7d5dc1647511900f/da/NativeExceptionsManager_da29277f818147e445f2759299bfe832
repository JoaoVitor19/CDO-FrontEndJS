7b8ceb51f7778bdf079b4a30c370a7c4
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var TurboModuleRegistry = _interopRequireWildcard(require("../TurboModule/TurboModuleRegistry"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var Platform = require("../Utilities/Platform");

var NativeModule = TurboModuleRegistry.getEnforcing('ExceptionsManager');
var ExceptionsManager = {
  reportFatalException: function reportFatalException(message, stack, exceptionId) {
    NativeModule.reportFatalException(message, stack, exceptionId);
  },
  reportSoftException: function reportSoftException(message, stack, exceptionId) {
    NativeModule.reportSoftException(message, stack, exceptionId);
  },
  updateExceptionMessage: function updateExceptionMessage(message, stack, exceptionId) {
    NativeModule.updateExceptionMessage(message, stack, exceptionId);
  },
  dismissRedbox: function dismissRedbox() {
    if (Platform.OS !== 'ios' && NativeModule.dismissRedbox) {
      NativeModule.dismissRedbox();
    }
  },
  reportException: function reportException(data) {
    if (NativeModule.reportException) {
      NativeModule.reportException(data);
      return;
    }

    if (data.isFatal) {
      ExceptionsManager.reportFatalException(data.message, data.stack, data.id);
    } else {
      ExceptionsManager.reportSoftException(data.message, data.stack, data.id);
    }
  }
};
var _default = ExceptionsManager;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk5hdGl2ZUV4Y2VwdGlvbnNNYW5hZ2VyLmpzIl0sIm5hbWVzIjpbIlBsYXRmb3JtIiwicmVxdWlyZSIsIk5hdGl2ZU1vZHVsZSIsIlR1cmJvTW9kdWxlUmVnaXN0cnkiLCJnZXRFbmZvcmNpbmciLCJFeGNlcHRpb25zTWFuYWdlciIsInJlcG9ydEZhdGFsRXhjZXB0aW9uIiwibWVzc2FnZSIsInN0YWNrIiwiZXhjZXB0aW9uSWQiLCJyZXBvcnRTb2Z0RXhjZXB0aW9uIiwidXBkYXRlRXhjZXB0aW9uTWVzc2FnZSIsImRpc21pc3NSZWRib3giLCJPUyIsInJlcG9ydEV4Y2VwdGlvbiIsImRhdGEiLCJpc0ZhdGFsIiwiaWQiXSwibWFwcGluZ3MiOiJBQVVBOzs7Ozs7O0FBR0E7Ozs7OztBQThDQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8seUJBQXhCOztBQUVBLElBQU1DLFlBQVksR0FBR0MsbUJBQW1CLENBQUNDLFlBQXBCLENBQ25CLG1CQURtQixDQUFyQjtBQUlBLElBQU1DLGlCQUFpQixHQUFHO0FBQ3hCQyxFQUFBQSxvQkFEd0IsZ0NBRXRCQyxPQUZzQixFQUd0QkMsS0FIc0IsRUFJdEJDLFdBSnNCLEVBS3RCO0FBQ0FQLElBQUFBLFlBQVksQ0FBQ0ksb0JBQWIsQ0FBa0NDLE9BQWxDLEVBQTJDQyxLQUEzQyxFQUFrREMsV0FBbEQ7QUFDRCxHQVB1QjtBQVF4QkMsRUFBQUEsbUJBUndCLCtCQVN0QkgsT0FUc0IsRUFVdEJDLEtBVnNCLEVBV3RCQyxXQVhzQixFQVl0QjtBQUNBUCxJQUFBQSxZQUFZLENBQUNRLG1CQUFiLENBQWlDSCxPQUFqQyxFQUEwQ0MsS0FBMUMsRUFBaURDLFdBQWpEO0FBQ0QsR0FkdUI7QUFleEJFLEVBQUFBLHNCQWZ3QixrQ0FnQnRCSixPQWhCc0IsRUFpQnRCQyxLQWpCc0IsRUFrQnRCQyxXQWxCc0IsRUFtQnRCO0FBQ0FQLElBQUFBLFlBQVksQ0FBQ1Msc0JBQWIsQ0FBb0NKLE9BQXBDLEVBQTZDQyxLQUE3QyxFQUFvREMsV0FBcEQ7QUFDRCxHQXJCdUI7QUFzQnhCRyxFQUFBQSxhQXRCd0IsMkJBc0JGO0FBQ3BCLFFBQUlaLFFBQVEsQ0FBQ2EsRUFBVCxLQUFnQixLQUFoQixJQUF5QlgsWUFBWSxDQUFDVSxhQUExQyxFQUF5RDtBQUV2RFYsTUFBQUEsWUFBWSxDQUFDVSxhQUFiO0FBQ0Q7QUFDRixHQTNCdUI7QUE0QnhCRSxFQUFBQSxlQTVCd0IsMkJBNEJSQyxJQTVCUSxFQTRCbUI7QUFDekMsUUFBSWIsWUFBWSxDQUFDWSxlQUFqQixFQUFrQztBQUNoQ1osTUFBQUEsWUFBWSxDQUFDWSxlQUFiLENBQTZCQyxJQUE3QjtBQUNBO0FBQ0Q7O0FBQ0QsUUFBSUEsSUFBSSxDQUFDQyxPQUFULEVBQWtCO0FBQ2hCWCxNQUFBQSxpQkFBaUIsQ0FBQ0Msb0JBQWxCLENBQXVDUyxJQUFJLENBQUNSLE9BQTVDLEVBQXFEUSxJQUFJLENBQUNQLEtBQTFELEVBQWlFTyxJQUFJLENBQUNFLEVBQXRFO0FBQ0QsS0FGRCxNQUVPO0FBQ0xaLE1BQUFBLGlCQUFpQixDQUFDSyxtQkFBbEIsQ0FBc0NLLElBQUksQ0FBQ1IsT0FBM0MsRUFBb0RRLElBQUksQ0FBQ1AsS0FBekQsRUFBZ0VPLElBQUksQ0FBQ0UsRUFBckU7QUFDRDtBQUNGO0FBdEN1QixDQUExQjtlQXlDZVosaUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93IHN0cmljdFxuICogQGZvcm1hdFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHR5cGUge1R1cmJvTW9kdWxlfSBmcm9tICcuLi9UdXJib01vZHVsZS9SQ1RFeHBvcnQnO1xuaW1wb3J0ICogYXMgVHVyYm9Nb2R1bGVSZWdpc3RyeSBmcm9tICcuLi9UdXJib01vZHVsZS9UdXJib01vZHVsZVJlZ2lzdHJ5JztcblxuZXhwb3J0IHR5cGUgU3RhY2tGcmFtZSA9IHt8XG4gIGNvbHVtbjogP251bWJlcixcbiAgZmlsZTogP3N0cmluZyxcbiAgbGluZU51bWJlcjogP251bWJlcixcbiAgbWV0aG9kTmFtZTogc3RyaW5nLFxuICBjb2xsYXBzZT86IGJvb2xlYW4sXG58fTtcblxuZXhwb3J0IHR5cGUgRXhjZXB0aW9uRGF0YSA9IHtcbiAgbWVzc2FnZTogc3RyaW5nLFxuICBvcmlnaW5hbE1lc3NhZ2U6ID9zdHJpbmcsXG4gIG5hbWU6ID9zdHJpbmcsXG4gIGNvbXBvbmVudFN0YWNrOiA/c3RyaW5nLFxuICBzdGFjazogQXJyYXk8U3RhY2tGcmFtZT4sXG4gIGlkOiBudW1iZXIsXG4gIGlzRmF0YWw6IGJvb2xlYW4sXG4gIC8vIGZsb3dsaW50LW5leHQtbGluZSB1bmNsZWFyLXR5cGU6b2ZmXG4gIGV4dHJhRGF0YT86IE9iamVjdCxcbiAgLi4uXG59O1xuXG5leHBvcnQgaW50ZXJmYWNlIFNwZWMgZXh0ZW5kcyBUdXJib01vZHVsZSB7XG4gIC8vIERlcHJlY2F0ZWQ6IFVzZSBgcmVwb3J0RXhjZXB0aW9uYFxuICArcmVwb3J0RmF0YWxFeGNlcHRpb246IChcbiAgICBtZXNzYWdlOiBzdHJpbmcsXG4gICAgc3RhY2s6IEFycmF5PFN0YWNrRnJhbWU+LFxuICAgIGV4Y2VwdGlvbklkOiBudW1iZXIsXG4gICkgPT4gdm9pZDtcbiAgLy8gRGVwcmVjYXRlZDogVXNlIGByZXBvcnRFeGNlcHRpb25gXG4gICtyZXBvcnRTb2Z0RXhjZXB0aW9uOiAoXG4gICAgbWVzc2FnZTogc3RyaW5nLFxuICAgIHN0YWNrOiBBcnJheTxTdGFja0ZyYW1lPixcbiAgICBleGNlcHRpb25JZDogbnVtYmVyLFxuICApID0+IHZvaWQ7XG4gICtyZXBvcnRFeGNlcHRpb24/OiAoZGF0YTogRXhjZXB0aW9uRGF0YSkgPT4gdm9pZDtcbiAgK3VwZGF0ZUV4Y2VwdGlvbk1lc3NhZ2U6IChcbiAgICBtZXNzYWdlOiBzdHJpbmcsXG4gICAgc3RhY2s6IEFycmF5PFN0YWNrRnJhbWU+LFxuICAgIGV4Y2VwdGlvbklkOiBudW1iZXIsXG4gICkgPT4gdm9pZDtcbiAgLy8gVE9ETyhUNTMzMTEyODEpOiBUaGlzIGlzIGEgbm9vcCBvbiBpT1Mgbm93LiBJbXBsZW1lbnQgaXQuXG4gICtkaXNtaXNzUmVkYm94PzogKCkgPT4gdm9pZDtcbn1cblxuY29uc3QgUGxhdGZvcm0gPSByZXF1aXJlKCcuLi9VdGlsaXRpZXMvUGxhdGZvcm0nKTtcblxuY29uc3QgTmF0aXZlTW9kdWxlID0gVHVyYm9Nb2R1bGVSZWdpc3RyeS5nZXRFbmZvcmNpbmc8U3BlYz4oXG4gICdFeGNlcHRpb25zTWFuYWdlcicsXG4pO1xuXG5jb25zdCBFeGNlcHRpb25zTWFuYWdlciA9IHtcbiAgcmVwb3J0RmF0YWxFeGNlcHRpb24oXG4gICAgbWVzc2FnZTogc3RyaW5nLFxuICAgIHN0YWNrOiBBcnJheTxTdGFja0ZyYW1lPixcbiAgICBleGNlcHRpb25JZDogbnVtYmVyLFxuICApIHtcbiAgICBOYXRpdmVNb2R1bGUucmVwb3J0RmF0YWxFeGNlcHRpb24obWVzc2FnZSwgc3RhY2ssIGV4Y2VwdGlvbklkKTtcbiAgfSxcbiAgcmVwb3J0U29mdEV4Y2VwdGlvbihcbiAgICBtZXNzYWdlOiBzdHJpbmcsXG4gICAgc3RhY2s6IEFycmF5PFN0YWNrRnJhbWU+LFxuICAgIGV4Y2VwdGlvbklkOiBudW1iZXIsXG4gICkge1xuICAgIE5hdGl2ZU1vZHVsZS5yZXBvcnRTb2Z0RXhjZXB0aW9uKG1lc3NhZ2UsIHN0YWNrLCBleGNlcHRpb25JZCk7XG4gIH0sXG4gIHVwZGF0ZUV4Y2VwdGlvbk1lc3NhZ2UoXG4gICAgbWVzc2FnZTogc3RyaW5nLFxuICAgIHN0YWNrOiBBcnJheTxTdGFja0ZyYW1lPixcbiAgICBleGNlcHRpb25JZDogbnVtYmVyLFxuICApIHtcbiAgICBOYXRpdmVNb2R1bGUudXBkYXRlRXhjZXB0aW9uTWVzc2FnZShtZXNzYWdlLCBzdGFjaywgZXhjZXB0aW9uSWQpO1xuICB9LFxuICBkaXNtaXNzUmVkYm94KCk6IHZvaWQge1xuICAgIGlmIChQbGF0Zm9ybS5PUyAhPT0gJ2lvcycgJiYgTmF0aXZlTW9kdWxlLmRpc21pc3NSZWRib3gpIHtcbiAgICAgIC8vIFRPRE8oVDUzMzExMjgxKTogVGhpcyBpcyBhIG5vb3Agb24gaU9TIG5vdy4gSW1wbGVtZW50IGl0LlxuICAgICAgTmF0aXZlTW9kdWxlLmRpc21pc3NSZWRib3goKTtcbiAgICB9XG4gIH0sXG4gIHJlcG9ydEV4Y2VwdGlvbihkYXRhOiBFeGNlcHRpb25EYXRhKTogdm9pZCB7XG4gICAgaWYgKE5hdGl2ZU1vZHVsZS5yZXBvcnRFeGNlcHRpb24pIHtcbiAgICAgIE5hdGl2ZU1vZHVsZS5yZXBvcnRFeGNlcHRpb24oZGF0YSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChkYXRhLmlzRmF0YWwpIHtcbiAgICAgIEV4Y2VwdGlvbnNNYW5hZ2VyLnJlcG9ydEZhdGFsRXhjZXB0aW9uKGRhdGEubWVzc2FnZSwgZGF0YS5zdGFjaywgZGF0YS5pZCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIEV4Y2VwdGlvbnNNYW5hZ2VyLnJlcG9ydFNvZnRFeGNlcHRpb24oZGF0YS5tZXNzYWdlLCBkYXRhLnN0YWNrLCBkYXRhLmlkKTtcbiAgICB9XG4gIH0sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBFeGNlcHRpb25zTWFuYWdlcjtcbiJdfQ==