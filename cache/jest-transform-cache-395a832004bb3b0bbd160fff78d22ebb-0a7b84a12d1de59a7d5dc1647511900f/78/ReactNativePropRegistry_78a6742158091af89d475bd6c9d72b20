794b1c22d19800eafa1f6e347627e3b8
"use strict";

exports.__esModule = true;
exports.default = void 0;
var emptyObject = {};
var objects = {};
var prefix = 'r';
var uniqueID = 1;

var createKey = function createKey(id) {
  return prefix + "-" + id;
};

var ReactNativePropRegistry = function () {
  function ReactNativePropRegistry() {}

  ReactNativePropRegistry.register = function register(object) {
    var id = uniqueID++;

    if (process.env.NODE_ENV !== 'production') {
      Object.freeze(object);
    }

    var key = createKey(id);
    objects[key] = object;
    return id;
  };

  ReactNativePropRegistry.getByID = function getByID(id) {
    if (!id) {
      return emptyObject;
    }

    var key = createKey(id);
    var object = objects[key];

    if (!object) {
      console.warn('Invalid style with id `' + id + '`. Skipping ...');
      return emptyObject;
    }

    return object;
  };

  return ReactNativePropRegistry;
}();

exports.default = ReactNativePropRegistry;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlYWN0TmF0aXZlUHJvcFJlZ2lzdHJ5LmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImVtcHR5T2JqZWN0Iiwib2JqZWN0cyIsInByZWZpeCIsInVuaXF1ZUlEIiwiY3JlYXRlS2V5IiwiaWQiLCJSZWFjdE5hdGl2ZVByb3BSZWdpc3RyeSIsInJlZ2lzdGVyIiwib2JqZWN0IiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiT2JqZWN0IiwiZnJlZXplIiwia2V5IiwiZ2V0QnlJRCIsImNvbnNvbGUiLCJ3YXJuIiwibW9kdWxlIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQUEsT0FBTyxDQUFDQyxVQUFSLEdBQXFCLElBQXJCO0FBQ0FELE9BQU8sQ0FBQ0UsT0FBUixHQUFrQixLQUFLLENBQXZCO0FBV0EsSUFBSUMsV0FBVyxHQUFHLEVBQWxCO0FBQ0EsSUFBSUMsT0FBTyxHQUFHLEVBQWQ7QUFDQSxJQUFJQyxNQUFNLEdBQUcsR0FBYjtBQUNBLElBQUlDLFFBQVEsR0FBRyxDQUFmOztBQUVBLElBQUlDLFNBQVMsR0FBRyxTQUFTQSxTQUFULENBQW1CQyxFQUFuQixFQUF1QjtBQUNyQyxTQUFPSCxNQUFNLEdBQUcsR0FBVCxHQUFlRyxFQUF0QjtBQUNELENBRkQ7O0FBSUEsSUFBSUMsdUJBQXVCLEdBQWdCLFlBQVk7QUFDckQsV0FBU0EsdUJBQVQsR0FBbUMsQ0FBRTs7QUFFckNBLEVBQUFBLHVCQUF1QixDQUFDQyxRQUF4QixHQUFtQyxTQUFTQSxRQUFULENBQWtCQyxNQUFsQixFQUEwQjtBQUMzRCxRQUFJSCxFQUFFLEdBQUdGLFFBQVEsRUFBakI7O0FBRUEsUUFBSU0sT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsWUFBN0IsRUFBMkM7QUFDekNDLE1BQUFBLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjTCxNQUFkO0FBQ0Q7O0FBRUQsUUFBSU0sR0FBRyxHQUFHVixTQUFTLENBQUNDLEVBQUQsQ0FBbkI7QUFDQUosSUFBQUEsT0FBTyxDQUFDYSxHQUFELENBQVAsR0FBZU4sTUFBZjtBQUNBLFdBQU9ILEVBQVA7QUFDRCxHQVZEOztBQVlBQyxFQUFBQSx1QkFBdUIsQ0FBQ1MsT0FBeEIsR0FBa0MsU0FBU0EsT0FBVCxDQUFpQlYsRUFBakIsRUFBcUI7QUFDckQsUUFBSSxDQUFDQSxFQUFMLEVBQVM7QUFHUCxhQUFPTCxXQUFQO0FBQ0Q7O0FBRUQsUUFBSWMsR0FBRyxHQUFHVixTQUFTLENBQUNDLEVBQUQsQ0FBbkI7QUFDQSxRQUFJRyxNQUFNLEdBQUdQLE9BQU8sQ0FBQ2EsR0FBRCxDQUFwQjs7QUFFQSxRQUFJLENBQUNOLE1BQUwsRUFBYTtBQUNYUSxNQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FBYSw0QkFBNEJaLEVBQTVCLEdBQWlDLGlCQUE5QztBQUNBLGFBQU9MLFdBQVA7QUFDRDs7QUFFRCxXQUFPUSxNQUFQO0FBQ0QsR0FoQkQ7O0FBa0JBLFNBQU9GLHVCQUFQO0FBQ0QsQ0FsQzBDLEVBQTNDOztBQW9DQVQsT0FBTyxDQUFDRSxPQUFSLEdBQWtCTyx1QkFBbEI7QUFDQVksTUFBTSxDQUFDckIsT0FBUCxHQUFpQkEsT0FBTyxDQUFDRSxPQUF6QiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgTmljb2xhcyBHYWxsYWdoZXIuXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xudmFyIGVtcHR5T2JqZWN0ID0ge307XG52YXIgb2JqZWN0cyA9IHt9O1xudmFyIHByZWZpeCA9ICdyJztcbnZhciB1bmlxdWVJRCA9IDE7XG5cbnZhciBjcmVhdGVLZXkgPSBmdW5jdGlvbiBjcmVhdGVLZXkoaWQpIHtcbiAgcmV0dXJuIHByZWZpeCArIFwiLVwiICsgaWQ7XG59O1xuXG52YXIgUmVhY3ROYXRpdmVQcm9wUmVnaXN0cnkgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBSZWFjdE5hdGl2ZVByb3BSZWdpc3RyeSgpIHt9XG5cbiAgUmVhY3ROYXRpdmVQcm9wUmVnaXN0cnkucmVnaXN0ZXIgPSBmdW5jdGlvbiByZWdpc3RlcihvYmplY3QpIHtcbiAgICB2YXIgaWQgPSB1bmlxdWVJRCsrO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIE9iamVjdC5mcmVlemUob2JqZWN0KTtcbiAgICB9XG5cbiAgICB2YXIga2V5ID0gY3JlYXRlS2V5KGlkKTtcbiAgICBvYmplY3RzW2tleV0gPSBvYmplY3Q7XG4gICAgcmV0dXJuIGlkO1xuICB9O1xuXG4gIFJlYWN0TmF0aXZlUHJvcFJlZ2lzdHJ5LmdldEJ5SUQgPSBmdW5jdGlvbiBnZXRCeUlEKGlkKSB7XG4gICAgaWYgKCFpZCkge1xuICAgICAgLy8gVXNlZCBpbiB0aGUgc3R5bGU9e1tjb25kaXRpb24gJiYgaWRdfSBwYXR0ZXJuLFxuICAgICAgLy8gd2Ugd2FudCBpdCB0byBiZSBhIG5vLW9wIHdoZW4gdGhlIHZhbHVlIGlzIGZhbHNlIG9yIG51bGxcbiAgICAgIHJldHVybiBlbXB0eU9iamVjdDtcbiAgICB9XG5cbiAgICB2YXIga2V5ID0gY3JlYXRlS2V5KGlkKTtcbiAgICB2YXIgb2JqZWN0ID0gb2JqZWN0c1trZXldO1xuXG4gICAgaWYgKCFvYmplY3QpIHtcbiAgICAgIGNvbnNvbGUud2FybignSW52YWxpZCBzdHlsZSB3aXRoIGlkIGAnICsgaWQgKyAnYC4gU2tpcHBpbmcgLi4uJyk7XG4gICAgICByZXR1cm4gZW1wdHlPYmplY3Q7XG4gICAgfVxuXG4gICAgcmV0dXJuIG9iamVjdDtcbiAgfTtcblxuICByZXR1cm4gUmVhY3ROYXRpdmVQcm9wUmVnaXN0cnk7XG59KCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IFJlYWN0TmF0aXZlUHJvcFJlZ2lzdHJ5O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7Il19