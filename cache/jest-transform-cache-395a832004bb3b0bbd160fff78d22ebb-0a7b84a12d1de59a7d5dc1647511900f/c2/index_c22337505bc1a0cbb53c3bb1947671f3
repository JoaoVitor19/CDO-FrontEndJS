fb1b0d8daf864371eade0a93476b2e6d
'use strict';

exports.__esModule = true;
exports.default = void 0;

var _Platform = _interopRequireDefault(require("../../../exports/Platform"));

var _UIManager = _interopRequireDefault(require("../../../exports/UIManager"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var __DEV__ = process.env.NODE_ENV !== 'production';

function configureNext(config, onAnimationDidEnd) {
  if (!_Platform.default.isTesting) {
    _UIManager.default.configureNextLayoutAnimation(config, onAnimationDidEnd !== null && onAnimationDidEnd !== void 0 ? onAnimationDidEnd : function () {}, function () {});
  }
}

function create(duration, type, property) {
  return {
    duration: duration,
    create: {
      type: type,
      property: property
    },
    update: {
      type: type
    },
    delete: {
      type: type,
      property: property
    }
  };
}

var Presets = {
  easeInEaseOut: create(300, 'easeInEaseOut', 'opacity'),
  linear: create(500, 'linear', 'opacity'),
  spring: {
    duration: 700,
    create: {
      type: 'linear',
      property: 'opacity'
    },
    update: {
      type: 'spring',
      springDamping: 0.4
    },
    delete: {
      type: 'linear',
      property: 'opacity'
    }
  }
};
var LayoutAnimation = {
  configureNext: configureNext,
  create: create,
  Types: Object.freeze({
    spring: 'spring',
    linear: 'linear',
    easeInEaseOut: 'easeInEaseOut',
    easeIn: 'easeIn',
    easeOut: 'easeOut',
    keyboard: 'keyboard'
  }),
  Properties: Object.freeze({
    opacity: 'opacity',
    scaleX: 'scaleX',
    scaleY: 'scaleY',
    scaleXY: 'scaleXY'
  }),
  checkConfig: function checkConfig() {
    console.error('LayoutAnimation.checkConfig(...) has been disabled.');
  },
  Presets: Presets,
  easeInEaseOut: configureNext.bind(null, Presets.easeInEaseOut),
  linear: configureNext.bind(null, Presets.linear),
  spring: configureNext.bind(null, Presets.spring)
};
var _default = LayoutAnimation;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9QbGF0Zm9ybSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX1VJTWFuYWdlciIsIm9iaiIsIl9fREVWX18iLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJjb25maWd1cmVOZXh0IiwiY29uZmlnIiwib25BbmltYXRpb25EaWRFbmQiLCJpc1Rlc3RpbmciLCJjb25maWd1cmVOZXh0TGF5b3V0QW5pbWF0aW9uIiwiY3JlYXRlIiwiZHVyYXRpb24iLCJ0eXBlIiwicHJvcGVydHkiLCJ1cGRhdGUiLCJkZWxldGUiLCJQcmVzZXRzIiwiZWFzZUluRWFzZU91dCIsImxpbmVhciIsInNwcmluZyIsInNwcmluZ0RhbXBpbmciLCJMYXlvdXRBbmltYXRpb24iLCJUeXBlcyIsIk9iamVjdCIsImZyZWV6ZSIsImVhc2VJbiIsImVhc2VPdXQiLCJrZXlib2FyZCIsIlByb3BlcnRpZXMiLCJvcGFjaXR5Iiwic2NhbGVYIiwic2NhbGVZIiwic2NhbGVYWSIsImNoZWNrQ29uZmlnIiwiY29uc29sZSIsImVycm9yIiwiYmluZCIsIl9kZWZhdWx0IiwibW9kdWxlIl0sIm1hcHBpbmdzIjoiQUFTQTs7QUFFQUEsT0FBTyxDQUFDQyxVQUFSLEdBQXFCLElBQXJCO0FBQ0FELE9BQU8sQ0FBQ0UsT0FBUixHQUFrQixLQUFLLENBQXZCOztBQUVBLElBQUlDLFNBQVMsR0FBR0Msc0JBQXNCLENBQUNDLE9BQU8sNkJBQVIsQ0FBdEM7O0FBRUEsSUFBSUMsVUFBVSxHQUFHRixzQkFBc0IsQ0FBQ0MsT0FBTyw4QkFBUixDQUF2Qzs7QUFFQSxTQUFTRCxzQkFBVCxDQUFnQ0csR0FBaEMsRUFBcUM7QUFBRSxTQUFPQSxHQUFHLElBQUlBLEdBQUcsQ0FBQ04sVUFBWCxHQUF3Qk0sR0FBeEIsR0FBOEI7QUFBRUwsSUFBQUEsT0FBTyxFQUFFSztBQUFYLEdBQXJDO0FBQXdE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TyxDQUFDQyxhQUFqQyxDQXRDSztBQXVDcEJDLEVBQUFBLE1BQU0sRUFBRWIsYUFBYSxDQUFDK0IsSUFBZCxDQUFtQixJQUFuQixFQUF5QnBCLE9BQU8sQ0FBQ0UsTUFBakMsQ0F2Q1k7QUF3Q3BCQyxFQUFBQSxNQUFNLEVBQUVkLGFBQWEsQ0FBQytCLElBQWQsQ0FBbUIsSUFBbkIsRUFBeUJwQixPQUFPLENBQUNHLE1BQWpDO0FBeENZLENBQXRCO0FBMENBLElBQUlrQixRQUFRLEdBQUdoQixlQUFmO0FBQ0E1QixPQUFPLENBQUNFLE9BQVIsR0FBa0IwQyxRQUFsQjtBQUNBQyxNQUFNLENBQUM3QyxPQUFQLEdBQWlCQSxPQUFPLENBQUNFLE9BQXpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqIEBmb3JtYXRcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX1BsYXRmb3JtID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vLi4vZXhwb3J0cy9QbGF0Zm9ybVwiKSk7XG5cbnZhciBfVUlNYW5hZ2VyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vLi4vZXhwb3J0cy9VSU1hbmFnZXJcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgX19ERVZfXyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbic7XG5cbmZ1bmN0aW9uIGNvbmZpZ3VyZU5leHQoY29uZmlnLCBvbkFuaW1hdGlvbkRpZEVuZCkge1xuICBpZiAoIV9QbGF0Zm9ybS5kZWZhdWx0LmlzVGVzdGluZykge1xuICAgIF9VSU1hbmFnZXIuZGVmYXVsdC5jb25maWd1cmVOZXh0TGF5b3V0QW5pbWF0aW9uKGNvbmZpZywgb25BbmltYXRpb25EaWRFbmQgIT09IG51bGwgJiYgb25BbmltYXRpb25EaWRFbmQgIT09IHZvaWQgMCA/IG9uQW5pbWF0aW9uRGlkRW5kIDogZnVuY3Rpb24gKCkge30sIGZ1bmN0aW9uICgpIHt9XG4gICAgLyogdW51c2VkIG9uRXJyb3IgKi9cbiAgICApO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZShkdXJhdGlvbiwgdHlwZSwgcHJvcGVydHkpIHtcbiAgcmV0dXJuIHtcbiAgICBkdXJhdGlvbjogZHVyYXRpb24sXG4gICAgY3JlYXRlOiB7XG4gICAgICB0eXBlOiB0eXBlLFxuICAgICAgcHJvcGVydHk6IHByb3BlcnR5XG4gICAgfSxcbiAgICB1cGRhdGU6IHtcbiAgICAgIHR5cGU6IHR5cGVcbiAgICB9LFxuICAgIGRlbGV0ZToge1xuICAgICAgdHlwZTogdHlwZSxcbiAgICAgIHByb3BlcnR5OiBwcm9wZXJ0eVxuICAgIH1cbiAgfTtcbn1cblxudmFyIFByZXNldHMgPSB7XG4gIGVhc2VJbkVhc2VPdXQ6IGNyZWF0ZSgzMDAsICdlYXNlSW5FYXNlT3V0JywgJ29wYWNpdHknKSxcbiAgbGluZWFyOiBjcmVhdGUoNTAwLCAnbGluZWFyJywgJ29wYWNpdHknKSxcbiAgc3ByaW5nOiB7XG4gICAgZHVyYXRpb246IDcwMCxcbiAgICBjcmVhdGU6IHtcbiAgICAgIHR5cGU6ICdsaW5lYXInLFxuICAgICAgcHJvcGVydHk6ICdvcGFjaXR5J1xuICAgIH0sXG4gICAgdXBkYXRlOiB7XG4gICAgICB0eXBlOiAnc3ByaW5nJyxcbiAgICAgIHNwcmluZ0RhbXBpbmc6IDAuNFxuICAgIH0sXG4gICAgZGVsZXRlOiB7XG4gICAgICB0eXBlOiAnbGluZWFyJyxcbiAgICAgIHByb3BlcnR5OiAnb3BhY2l0eSdcbiAgICB9XG4gIH1cbn07XG4vKipcbiAqIEF1dG9tYXRpY2FsbHkgYW5pbWF0ZXMgdmlld3MgdG8gdGhlaXIgbmV3IHBvc2l0aW9ucyB3aGVuIHRoZVxuICogbmV4dCBsYXlvdXQgaGFwcGVucy5cbiAqXG4gKiBBIGNvbW1vbiB3YXkgdG8gdXNlIHRoaXMgQVBJIGlzIHRvIGNhbGwgaXQgYmVmb3JlIGNhbGxpbmcgYHNldFN0YXRlYC5cbiAqXG4gKiBOb3RlIHRoYXQgaW4gb3JkZXIgdG8gZ2V0IHRoaXMgdG8gd29yayBvbiAqKkFuZHJvaWQqKiB5b3UgbmVlZCB0byBzZXQgdGhlIGZvbGxvd2luZyBmbGFncyB2aWEgYFVJTWFuYWdlcmA6XG4gKlxuICogICAgIFVJTWFuYWdlci5zZXRMYXlvdXRBbmltYXRpb25FbmFibGVkRXhwZXJpbWVudGFsICYmIFVJTWFuYWdlci5zZXRMYXlvdXRBbmltYXRpb25FbmFibGVkRXhwZXJpbWVudGFsKHRydWUpO1xuICovXG5cbnZhciBMYXlvdXRBbmltYXRpb24gPSB7XG4gIC8qKlxuICAgKiBTY2hlZHVsZXMgYW4gYW5pbWF0aW9uIHRvIGhhcHBlbiBvbiB0aGUgbmV4dCBsYXlvdXQuXG4gICAqXG4gICAqIEBwYXJhbSBjb25maWcgU3BlY2lmaWVzIGFuaW1hdGlvbiBwcm9wZXJ0aWVzOlxuICAgKlxuICAgKiAgIC0gYGR1cmF0aW9uYCBpbiBtaWxsaXNlY29uZHNcbiAgICogICAtIGBjcmVhdGVgLCBgQW5pbWF0aW9uQ29uZmlnYCBmb3IgYW5pbWF0aW5nIGluIG5ldyB2aWV3c1xuICAgKiAgIC0gYHVwZGF0ZWAsIGBBbmltYXRpb25Db25maWdgIGZvciBhbmltYXRpbmcgdmlld3MgdGhhdCBoYXZlIGJlZW4gdXBkYXRlZFxuICAgKlxuICAgKiBAcGFyYW0gb25BbmltYXRpb25EaWRFbmQgQ2FsbGVkIHdoZW4gdGhlIGFuaW1hdGlvbiBmaW5pc2hlZC5cbiAgICogT25seSBzdXBwb3J0ZWQgb24gaU9TLlxuICAgKiBAcGFyYW0gb25FcnJvciBDYWxsZWQgb24gZXJyb3IuIE9ubHkgc3VwcG9ydGVkIG9uIGlPUy5cbiAgICovXG4gIGNvbmZpZ3VyZU5leHQ6IGNvbmZpZ3VyZU5leHQsXG5cbiAgLyoqXG4gICAqIEhlbHBlciBmb3IgY3JlYXRpbmcgYSBjb25maWcgZm9yIGBjb25maWd1cmVOZXh0YC5cbiAgICovXG4gIGNyZWF0ZTogY3JlYXRlLFxuICBUeXBlczogT2JqZWN0LmZyZWV6ZSh7XG4gICAgc3ByaW5nOiAnc3ByaW5nJyxcbiAgICBsaW5lYXI6ICdsaW5lYXInLFxuICAgIGVhc2VJbkVhc2VPdXQ6ICdlYXNlSW5FYXNlT3V0JyxcbiAgICBlYXNlSW46ICdlYXNlSW4nLFxuICAgIGVhc2VPdXQ6ICdlYXNlT3V0JyxcbiAgICBrZXlib2FyZDogJ2tleWJvYXJkJ1xuICB9KSxcbiAgUHJvcGVydGllczogT2JqZWN0LmZyZWV6ZSh7XG4gICAgb3BhY2l0eTogJ29wYWNpdHknLFxuICAgIHNjYWxlWDogJ3NjYWxlWCcsXG4gICAgc2NhbGVZOiAnc2NhbGVZJyxcbiAgICBzY2FsZVhZOiAnc2NhbGVYWSdcbiAgfSksXG4gIGNoZWNrQ29uZmlnOiBmdW5jdGlvbiBjaGVja0NvbmZpZygpIHtcbiAgICBjb25zb2xlLmVycm9yKCdMYXlvdXRBbmltYXRpb24uY2hlY2tDb25maWcoLi4uKSBoYXMgYmVlbiBkaXNhYmxlZC4nKTtcbiAgfSxcbiAgUHJlc2V0czogUHJlc2V0cyxcbiAgZWFzZUluRWFzZU91dDogY29uZmlndXJlTmV4dC5iaW5kKG51bGwsIFByZXNldHMuZWFzZUluRWFzZU91dCksXG4gIGxpbmVhcjogY29uZmlndXJlTmV4dC5iaW5kKG51bGwsIFByZXNldHMubGluZWFyKSxcbiAgc3ByaW5nOiBjb25maWd1cmVOZXh0LmJpbmQobnVsbCwgUHJlc2V0cy5zcHJpbmcpXG59O1xudmFyIF9kZWZhdWx0ID0gTGF5b3V0QW5pbWF0aW9uO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDsiXX0=