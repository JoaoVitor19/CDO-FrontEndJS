bab115b54d817b8ee872d85ff820840a
"use strict";

exports.__esModule = true;
exports.default = void 0;

var _ExecutionEnvironment = require("fbjs/lib/ExecutionEnvironment");

function getQuery() {
  return _ExecutionEnvironment.canUseDOM && window.matchMedia != null ? window.matchMedia('(prefers-color-scheme: dark)') : null;
}

var query = getQuery();
var listenerMapping = new WeakMap();
var Appearance = {
  getColorScheme: function getColorScheme() {
    return query && query.matches ? 'dark' : 'light';
  },
  addChangeListener: function addChangeListener(listener) {
    var mappedListener = listenerMapping.get(listener);

    if (!mappedListener) {
      mappedListener = function mappedListener(_ref) {
        var matches = _ref.matches;
        listener({
          colorScheme: matches ? 'dark' : 'light'
        });
      };

      listenerMapping.set(listener, mappedListener);
    }

    if (query) {
      query.addListener(mappedListener);
    }
  },
  removeChangeListener: function removeChangeListener(listener) {
    var mappedListener = listenerMapping.get(listener);

    if (mappedListener) {
      if (query) {
        query.removeListener(mappedListener);
      }

      listenerMapping.delete(listener);
    }
  }
};
var _default = Appearance;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9FeGVjdXRpb25FbnZpcm9ubWVudCIsInJlcXVpcmUiLCJnZXRRdWVyeSIsImNhblVzZURPTSIsIndpbmRvdyIsIm1hdGNoTWVkaWEiLCJxdWVyeSIsImxpc3RlbmVyTWFwcGluZyIsIldlYWtNYXAiLCJBcHBlYXJhbmNlIiwiZ2V0Q29sb3JTY2hlbWUiLCJtYXRjaGVzIiwiYWRkQ2hhbmdlTGlzdGVuZXIiLCJsaXN0ZW5lciIsIm1hcHBlZExpc3RlbmVyIiwiZ2V0IiwiX3JlZiIsImNvbG9yU2NoZW1lIiwic2V0IiwiYWRkTGlzdGVuZXIiLCJyZW1vdmVDaGFuZ2VMaXN0ZW5lciIsInJlbW92ZUxpc3RlbmVyIiwiZGVsZXRlIiwiX2RlZmF1bHQiLCJtb2R1bGUiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxPQUFPLENBQUNDLFVBQVIsR0FBcUIsSUFBckI7QUFDQUQsT0FBTyxDQUFDRSxPQUFSLEdBQWtCLEtBQUssQ0FBdkI7O0FBRUEsSUFBSUMscUJBQXFCLEdBQUdDLE9BQU8sQ0FBQywrQkFBRCxDQUFuQzs7QUFXQSxTQUFTQyxRQUFULEdBQW9CO0FBQ2xCLFNBQU9GLHFCQUFxQixDQUFDRyxTQUF0QixJQUFtQ0MsTUFBTSxDQUFDQyxVQUFQLElBQXFCLElBQXhELEdBQStERCxNQUFNLENBQUNDLFVBQVAsQ0FBa0IsOEJBQWxCLENBQS9ELEdBQW1ILElBQTFIO0FBQ0Q7O0FBRUQsSUFBSUMsS0FBSyxHQUFHSixRQUFRLEVBQXBCO0FBQ0EsSUFBSUssZUFBZSxHQUFHLElBQUlDLE9BQUosRUFBdEI7QUFDQSxJQUFJQyxVQUFVLEdBQUc7QUFDZkMsRUFBQUEsY0FBYyxFQUFFLFNBQVNBLGNBQVQsR0FBMEI7QUFDeEMsV0FBT0osS0FBSyxJQUFJQSxLQUFLLENBQUNLLE9BQWYsR0FBeUIsTUFBekIsR0FBa0MsT0FBekM7QUFDRCxHQUhjO0FBSWZDLEVBQUFBLGlCQUFpQixFQUFFLFNBQVNBLGlCQUFULENBQTJCQyxRQUEzQixFQUFxQztBQUN0RCxRQUFJQyxjQUFjLEdBQUdQLGVBQWUsQ0FBQ1EsR0FBaEIsQ0FBb0JGLFFBQXBCLENBQXJCOztBQUVBLFFBQUksQ0FBQ0MsY0FBTCxFQUFxQjtBQUNuQkEsTUFBQUEsY0FBYyxHQUFHLFNBQVNBLGNBQVQsQ0FBd0JFLElBQXhCLEVBQThCO0FBQzdDLFlBQUlMLE9BQU8sR0FBR0ssSUFBSSxDQUFDTCxPQUFuQjtBQUNBRSxRQUFBQSxRQUFRLENBQUM7QUFDUEksVUFBQUEsV0FBVyxFQUFFTixPQUFPLEdBQUcsTUFBSCxHQUFZO0FBRHpCLFNBQUQsQ0FBUjtBQUdELE9BTEQ7O0FBT0FKLE1BQUFBLGVBQWUsQ0FBQ1csR0FBaEIsQ0FBb0JMLFFBQXBCLEVBQThCQyxjQUE5QjtBQUNEOztBQUVELFFBQUlSLEtBQUosRUFBVztBQUNUQSxNQUFBQSxLQUFLLENBQUNhLFdBQU4sQ0FBa0JMLGNBQWxCO0FBQ0Q7QUFDRixHQXJCYztBQXNCZk0sRUFBQUEsb0JBQW9CLEVBQUUsU0FBU0Esb0JBQVQsQ0FBOEJQLFFBQTlCLEVBQXdDO0FBQzVELFFBQUlDLGNBQWMsR0FBR1AsZUFBZSxDQUFDUSxHQUFoQixDQUFvQkYsUUFBcEIsQ0FBckI7O0FBRUEsUUFBSUMsY0FBSixFQUFvQjtBQUNsQixVQUFJUixLQUFKLEVBQVc7QUFDVEEsUUFBQUEsS0FBSyxDQUFDZSxjQUFOLENBQXFCUCxjQUFyQjtBQUNEOztBQUVEUCxNQUFBQSxlQUFlLENBQUNlLE1BQWhCLENBQXVCVCxRQUF2QjtBQUNEO0FBQ0Y7QUFoQ2MsQ0FBakI7QUFrQ0EsSUFBSVUsUUFBUSxHQUFHZCxVQUFmO0FBQ0FaLE9BQU8sQ0FBQ0UsT0FBUixHQUFrQndCLFFBQWxCO0FBQ0FDLE1BQU0sQ0FBQzNCLE9BQVAsR0FBaUJBLE9BQU8sQ0FBQ0UsT0FBekIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9FeGVjdXRpb25FbnZpcm9ubWVudCA9IHJlcXVpcmUoXCJmYmpzL2xpYi9FeGVjdXRpb25FbnZpcm9ubWVudFwiKTtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE5pY29sYXMgR2FsbGFnaGVyLlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKi9cbmZ1bmN0aW9uIGdldFF1ZXJ5KCkge1xuICByZXR1cm4gX0V4ZWN1dGlvbkVudmlyb25tZW50LmNhblVzZURPTSAmJiB3aW5kb3cubWF0Y2hNZWRpYSAhPSBudWxsID8gd2luZG93Lm1hdGNoTWVkaWEoJyhwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyayknKSA6IG51bGw7XG59XG5cbnZhciBxdWVyeSA9IGdldFF1ZXJ5KCk7XG52YXIgbGlzdGVuZXJNYXBwaW5nID0gbmV3IFdlYWtNYXAoKTtcbnZhciBBcHBlYXJhbmNlID0ge1xuICBnZXRDb2xvclNjaGVtZTogZnVuY3Rpb24gZ2V0Q29sb3JTY2hlbWUoKSB7XG4gICAgcmV0dXJuIHF1ZXJ5ICYmIHF1ZXJ5Lm1hdGNoZXMgPyAnZGFyaycgOiAnbGlnaHQnO1xuICB9LFxuICBhZGRDaGFuZ2VMaXN0ZW5lcjogZnVuY3Rpb24gYWRkQ2hhbmdlTGlzdGVuZXIobGlzdGVuZXIpIHtcbiAgICB2YXIgbWFwcGVkTGlzdGVuZXIgPSBsaXN0ZW5lck1hcHBpbmcuZ2V0KGxpc3RlbmVyKTtcblxuICAgIGlmICghbWFwcGVkTGlzdGVuZXIpIHtcbiAgICAgIG1hcHBlZExpc3RlbmVyID0gZnVuY3Rpb24gbWFwcGVkTGlzdGVuZXIoX3JlZikge1xuICAgICAgICB2YXIgbWF0Y2hlcyA9IF9yZWYubWF0Y2hlcztcbiAgICAgICAgbGlzdGVuZXIoe1xuICAgICAgICAgIGNvbG9yU2NoZW1lOiBtYXRjaGVzID8gJ2RhcmsnIDogJ2xpZ2h0J1xuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIGxpc3RlbmVyTWFwcGluZy5zZXQobGlzdGVuZXIsIG1hcHBlZExpc3RlbmVyKTtcbiAgICB9XG5cbiAgICBpZiAocXVlcnkpIHtcbiAgICAgIHF1ZXJ5LmFkZExpc3RlbmVyKG1hcHBlZExpc3RlbmVyKTtcbiAgICB9XG4gIH0sXG4gIHJlbW92ZUNoYW5nZUxpc3RlbmVyOiBmdW5jdGlvbiByZW1vdmVDaGFuZ2VMaXN0ZW5lcihsaXN0ZW5lcikge1xuICAgIHZhciBtYXBwZWRMaXN0ZW5lciA9IGxpc3RlbmVyTWFwcGluZy5nZXQobGlzdGVuZXIpO1xuXG4gICAgaWYgKG1hcHBlZExpc3RlbmVyKSB7XG4gICAgICBpZiAocXVlcnkpIHtcbiAgICAgICAgcXVlcnkucmVtb3ZlTGlzdGVuZXIobWFwcGVkTGlzdGVuZXIpO1xuICAgICAgfVxuXG4gICAgICBsaXN0ZW5lck1hcHBpbmcuZGVsZXRlKGxpc3RlbmVyKTtcbiAgICB9XG4gIH1cbn07XG52YXIgX2RlZmF1bHQgPSBBcHBlYXJhbmNlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDsiXX0=