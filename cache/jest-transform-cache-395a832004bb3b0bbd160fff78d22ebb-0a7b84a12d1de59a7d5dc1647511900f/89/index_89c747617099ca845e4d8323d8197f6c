9039b6d22cc263267fe00bb1a5b78e84
'use strict';

exports.__esModule = true;
exports.default = void 0;

var _InteractionManager = _interopRequireDefault(require("../../../exports/InteractionManager"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var Batchinator = function () {
  function Batchinator(callback, delayMS) {
    this._delay = delayMS;
    this._callback = callback;
  }

  var _proto = Batchinator.prototype;

  _proto.dispose = function dispose(options) {
    if (options === void 0) {
      options = {
        abort: false
      };
    }

    if (this._taskHandle) {
      this._taskHandle.cancel();

      if (!options.abort) {
        this._callback();
      }

      this._taskHandle = null;
    }
  };

  _proto.schedule = function schedule() {
    var _this = this;

    if (this._taskHandle) {
      return;
    }

    var timeoutHandle = setTimeout(function () {
      _this._taskHandle = _InteractionManager.default.runAfterInteractions(function () {
        _this._taskHandle = null;

        _this._callback();
      });
    }, this._delay);
    this._taskHandle = {
      cancel: function cancel() {
        return clearTimeout(timeoutHandle);
      }
    };
  };

  return Batchinator;
}();

var _default = Batchinator;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9JbnRlcmFjdGlvbk1hbmFnZXIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIm9iaiIsIkJhdGNoaW5hdG9yIiwiY2FsbGJhY2siLCJkZWxheU1TIiwiX2RlbGF5IiwiX2NhbGxiYWNrIiwiX3Byb3RvIiwicHJvdG90eXBlIiwiZGlzcG9zZSIsIm9wdGlvbnMiLCJhYm9ydCIsIl90YXNrSGFuZGxlIiwiY2FuY2VsIiwic2NoZWR1bGUiLCJfdGhpcyIsInRpbWVvdXRIYW5kbGUiLCJzZXRUaW1lb3V0IiwicnVuQWZ0ZXJJbnRlcmFjdGlvbnMiLCJjbGVhclRpbWVvdXQiLCJfZGVmYXVsdCIsIm1vZHVsZSJdLCJtYXBwaW5ncyI6IkFBU0E7O0FBRUFBLE9BQU8sQ0FBQ0MsVUFBUixHQUFxQixJQUFyQjtBQUNBRCxPQUFPLENBQUNFLE9BQVIsR0FBa0IsS0FBSyxDQUF2Qjs7QUFFQSxJQUFJQyxtQkFBbUIsR0FBR0Msc0JBQXNCLENBQUNDLE9BQU8sdUNBQVIsQ0FBaEQ7O0FBRUEsU0FBU0Qsc0JBQVQsQ0FBZ0NFLEdBQWhDLEVBQXFDO0FBQUUsU0FBT0EsR0FBRyxJQUFJQSxHQUFHLENBQUNMLFVBQVgsR0FBd0JLLEdBQXhCLEdBQThCO0FBQUVKLElBQUFBLE9BQU8sRUFBRUk7QUFBWCxHQUFyQztBQUF3RDs7QUF3Qi9GLElBQUlDLFdBQVcsR0FBZ0IsWUFBWTtBQUN6QyxXQUFTQSxXQUFULENBQXFCQyxRQUFyQixFQUErQkMsT0FBL0IsRUFBd0M7QUFDdEMsU0FBS0MsTUFBTCxHQUFjRCxPQUFkO0FBQ0EsU0FBS0UsU0FBTCxHQUFpQkgsUUFBakI7QUFDRDs7QUFTRCxNQUFJSSxNQUFNLEdBQUdMLFdBQVcsQ0FBQ00sU0FBekI7O0FBRUFELEVBQUFBLE1BQU0sQ0FBQ0UsT0FBUCxHQUFpQixTQUFTQSxPQUFULENBQWlCQyxPQUFqQixFQUEwQjtBQUN6QyxRQUFJQSxPQUFPLEtBQUssS0FBSyxDQUFyQixFQUF3QjtBQUN0QkEsTUFBQUEsT0FBTyxHQUFHO0FBQ1JDLFFBQUFBLEtBQUssRUFBRTtBQURDLE9BQVY7QUFHRDs7QUFFRCxRQUFJLEtBQUtDLFdBQVQsRUFBc0I7QUFDcEIsV0FBS0EsV0FBTCxDQUFpQkMsTUFBakI7O0FBRUEsVUFBSSxDQUFDSCxPQUFPLENBQUNDLEtBQWIsRUFBb0I7QUFDbEIsYUFBS0wsU0FBTDtBQUNEOztBQUVELFdBQUtNLFdBQUwsR0FBbUIsSUFBbkI7QUFDRDtBQUNGLEdBaEJEOztBQWtCQUwsRUFBQUEsTUFBTSxDQUFDTyxRQUFQLEdBQWtCLFNBQVNBLFFBQVQsR0FBb0I7QUFDcEMsUUFBSUMsS0FBSyxHQUFHLElBQVo7O0FBRUEsUUFBSSxLQUFLSCxXQUFULEVBQXNCO0FBQ3BCO0FBQ0Q7O0FBRUQsUUFBSUksYUFBYSxHQUFHQyxVQUFVLENBQUMsWUFBWTtBQUN6Q0YsTUFBQUEsS0FBSyxDQUFDSCxXQUFOLEdBQW9CZCxtQkFBbUIsQ0FBQ0QsT0FBcEIsQ0FBNEJxQixvQkFBNUIsQ0FBaUQsWUFBWTtBQUcvRUgsUUFBQUEsS0FBSyxDQUFDSCxXQUFOLEdBQW9CLElBQXBCOztBQUVBRyxRQUFBQSxLQUFLLENBQUNULFNBQU47QUFDRCxPQU5tQixDQUFwQjtBQU9ELEtBUjZCLEVBUTNCLEtBQUtELE1BUnNCLENBQTlCO0FBU0EsU0FBS08sV0FBTCxHQUFtQjtBQUNqQkMsTUFBQUEsTUFBTSxFQUFFLFNBQVNBLE1BQVQsR0FBa0I7QUFDeEIsZUFBT00sWUFBWSxDQUFDSCxhQUFELENBQW5CO0FBQ0Q7QUFIZ0IsS0FBbkI7QUFLRCxHQXJCRDs7QUF1QkEsU0FBT2QsV0FBUDtBQUNELENBekQ4QixFQUEvQjs7QUEyREEsSUFBSWtCLFFBQVEsR0FBR2xCLFdBQWY7QUFDQVAsT0FBTyxDQUFDRSxPQUFSLEdBQWtCdUIsUUFBbEI7QUFDQUMsTUFBTSxDQUFDMUIsT0FBUCxHQUFpQkEsT0FBTyxDQUFDRSxPQUF6QiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9JbnRlcmFjdGlvbk1hbmFnZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi8uLi9leHBvcnRzL0ludGVyYWN0aW9uTWFuYWdlclwiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8qKlxuICogQSBzaW1wbGUgY2xhc3MgZm9yIGJhdGNoaW5nIHVwIGludm9jYXRpb25zIG9mIGEgbG93LXByaSBjYWxsYmFjay4gQSB0aW1lb3V0IGlzIHNldCB0byBydW4gdGhlXG4gKiBjYWxsYmFjayBvbmNlIGFmdGVyIGEgZGVsYXksIG5vIG1hdHRlciBob3cgbWFueSB0aW1lcyBpdCdzIHNjaGVkdWxlZC4gT25jZSB0aGUgZGVsYXkgaXMgcmVhY2hlZCxcbiAqIEludGVyYWN0aW9uTWFuYWdlci5ydW5BZnRlckludGVyYWN0aW9ucyBpcyB1c2VkIHRvIGludm9rZSB0aGUgY2FsbGJhY2sgYWZ0ZXIgYW55IGhpLXByaVxuICogaW50ZXJhY3Rpb25zIGFyZSBkb25lIHJ1bm5pbmcuXG4gKlxuICogTWFrZSBzdXJlIHRvIGNsZWFudXAgd2l0aCBkaXNwb3NlKCkuICBFeGFtcGxlOlxuICpcbiAqICAgY2xhc3MgV2lkZ2V0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAqICAgICBfYmF0Y2hlZFNhdmU6IG5ldyBCYXRjaGluYXRvcigoKSA9PiB0aGlzLl9zYXZlU3RhdGUsIDEwMDApO1xuICogICAgIF9zYXZlU2F0ZSgpIHtcbiAqICAgICAgIC8vIHNhdmUgdGhpcy5zdGF0ZSB0byBkaXNrXG4gKiAgICAgfVxuICogICAgIGNvbXBvbmVudERpZFVwZGF0ZSgpIHtcbiAqICAgICAgIHRoaXMuX2JhdGNoZWRTYXZlLnNjaGVkdWxlKCk7XG4gKiAgICAgfVxuICogICAgIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICogICAgICAgdGhpcy5fYmF0Y2hlZFNhdmUuZGlzcG9zZSgpO1xuICogICAgIH1cbiAqICAgICAuLi5cbiAqICAgfVxuICovXG52YXIgQmF0Y2hpbmF0b3IgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBCYXRjaGluYXRvcihjYWxsYmFjaywgZGVsYXlNUykge1xuICAgIHRoaXMuX2RlbGF5ID0gZGVsYXlNUztcbiAgICB0aGlzLl9jYWxsYmFjayA9IGNhbGxiYWNrO1xuICB9XG4gIC8qXG4gICAqIENsZWFudXAgYW55IHBlbmRpbmcgdGFza3MuXG4gICAqXG4gICAqIEJ5IGRlZmF1bHQsIGlmIHRoZXJlIGlzIGEgcGVuZGluZyB0YXNrIHRoZSBjYWxsYmFjayBpcyBydW4gaW1tZWRpYXRlbHkuIFNldCB0aGUgb3B0aW9uIGFib3J0IHRvXG4gICAqIHRydWUgdG8gbm90IGNhbGwgdGhlIGNhbGxiYWNrIGlmIGl0IHdhcyBwZW5kaW5nLlxuICAgKi9cblxuXG4gIHZhciBfcHJvdG8gPSBCYXRjaGluYXRvci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmRpc3Bvc2UgPSBmdW5jdGlvbiBkaXNwb3NlKG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgICBvcHRpb25zID0ge1xuICAgICAgICBhYm9ydDogZmFsc2VcbiAgICAgIH07XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX3Rhc2tIYW5kbGUpIHtcbiAgICAgIHRoaXMuX3Rhc2tIYW5kbGUuY2FuY2VsKCk7XG5cbiAgICAgIGlmICghb3B0aW9ucy5hYm9ydCkge1xuICAgICAgICB0aGlzLl9jYWxsYmFjaygpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl90YXNrSGFuZGxlID0gbnVsbDtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnNjaGVkdWxlID0gZnVuY3Rpb24gc2NoZWR1bGUoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIGlmICh0aGlzLl90YXNrSGFuZGxlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIHRpbWVvdXRIYW5kbGUgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLl90YXNrSGFuZGxlID0gX0ludGVyYWN0aW9uTWFuYWdlci5kZWZhdWx0LnJ1bkFmdGVySW50ZXJhY3Rpb25zKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gTm90ZSB0aGF0IHdlIGNsZWFyIHRoZSBoYW5kbGUgYmVmb3JlIGludm9raW5nIHRoZSBjYWxsYmFjayBzbyB0aGF0IGlmIHRoZSBjYWxsYmFjayBjYWxsc1xuICAgICAgICAvLyBzY2hlZHVsZSBhZ2FpbiwgaXQgd2lsbCBhY3R1YWxseSBzY2hlZHVsZSBhbm90aGVyIHRhc2suXG4gICAgICAgIF90aGlzLl90YXNrSGFuZGxlID0gbnVsbDtcblxuICAgICAgICBfdGhpcy5fY2FsbGJhY2soKTtcbiAgICAgIH0pO1xuICAgIH0sIHRoaXMuX2RlbGF5KTtcbiAgICB0aGlzLl90YXNrSGFuZGxlID0ge1xuICAgICAgY2FuY2VsOiBmdW5jdGlvbiBjYW5jZWwoKSB7XG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQodGltZW91dEhhbmRsZSk7XG4gICAgICB9XG4gICAgfTtcbiAgfTtcblxuICByZXR1cm4gQmF0Y2hpbmF0b3I7XG59KCk7XG5cbnZhciBfZGVmYXVsdCA9IEJhdGNoaW5hdG9yO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDsiXX0=