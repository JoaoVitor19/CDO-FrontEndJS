5f4bcc03cd4d87916a71e5b7ad9ebff1
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Relatorios;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _expoLinearGradient = require("expo-linear-gradient");

var _App = require("../../App");

var _Menu = _interopRequireDefault(require("../../components/Menu/Menu"));

var _config = _interopRequireDefault(require("../../api/config"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Relatorios() {
  var _useState = (0, _react.useState)(),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      data = _useState2[0],
      setData = _useState2[1];

  var veichle = (0, _react.useContext)(_App.VeichleContext);

  var getData = function getData() {
    var response;
    return _regenerator.default.async(function getData$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return _regenerator.default.awrap(_config.default.get("/veiculo/" + veichle.veichle.id));

          case 2:
            response = _context.sent;
            setData(response.data);
            return _context.abrupt("return", response.data);

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, null, null, null, Promise);
  };

  (0, _react.useEffect)(function () {
    getData();
  }, []);
  return _react.default.createElement(_reactNative.View, {
    style: styles.globalRelatorios
  }, _react.default.createElement(_expoLinearGradient.LinearGradient, {
    colors: ['#70F6C6', '#227878', '#227878'],
    style: styles.background
  }), _react.default.createElement(_Menu.default, {
    title: "Relat\xF3rios"
  }), _react.default.createElement(_reactNative.View, {
    style: styles.boxRelatorios
  }, _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {
    style: styles.containerRelatorios
  }, _react.default.createElement(_reactNative.View, {
    style: {
      justifyContent: 'space-between'
    }
  }, _react.default.createElement(_reactNative.View, {
    style: styles.viewBox
  }, _react.default.createElement(_reactNative.Text, {
    style: styles.valoresContainerRelatorios
  }, "R$ 1000,00"), _react.default.createElement(_reactNative.Text, {
    style: styles.gastoContainerRelatorios
  }, " Gasto Total ")), _react.default.createElement(_reactNative.View, {
    style: styles.viewBox
  }, _react.default.createElement(_reactNative.Text, {
    style: styles.dataContainerRelatorios
  }), _react.default.createElement(_reactNative.Text, {
    style: styles.textContainerRelatorios
  }, "Ultimo Abastecimento"))), _react.default.createElement(_reactNative.View, null), _react.default.createElement(_reactNative.Image, {
    style: styles.relatorioContainerImages,
    source: require("../../assets/combustivel.png")
  })), _react.default.createElement(_reactNative.View, {
    style: styles.containerRelatorios
  }, _react.default.createElement(_reactNative.View, {
    style: {
      justifyContent: 'space-between'
    }
  }, _react.default.createElement(_reactNative.View, {
    style: styles.viewBox
  }, _react.default.createElement(_reactNative.Text, {
    style: styles.valoresContainerRelatorios
  }, "R$ 2000,00"), _react.default.createElement(_reactNative.Text, {
    style: styles.gastoContainerRelatorios
  }, " Gasto Total ")), _react.default.createElement(_reactNative.View, {
    style: styles.viewBox
  }, _react.default.createElement(_reactNative.Text, {
    style: styles.dataContainerRelatorios
  }, veichle.veichle.date), _react.default.createElement(_reactNative.Text, {
    style: styles.textContainerRelatorios
  }, "Ultima Manuten\xE7\xE3o"))), _react.default.createElement(_reactNative.Image, {
    style: styles.relatorioContainerImages,
    source: require("../../assets/reparar.png")
  })), _react.default.createElement(_reactNative.View, {
    style: styles.footerRelatorios
  }, _react.default.createElement(_reactNative.Image, {
    style: styles.imgFimRelatorios,
    source: require("../../assets/moneyimg.png")
  }), _react.default.createElement(_reactNative.View, {
    style: {
      alignItems: 'center'
    }
  }, _react.default.createElement(_reactNative.Text, {
    style: {
      color: 'black',
      fontWeight: 'bold',
      fontSize: 22
    }
  }, "Gasto Total"), _react.default.createElement(_reactNative.Text, {
    style: {
      color: 'white',
      fontSize: 20
    }
  }, "R$ 3.000,00")), _react.default.createElement(_reactNative.Image, {
    style: styles.imgFimRelatorios,
    source: require("../../assets/graficoimg.png")
  })))));
}

var styles = _reactNative.StyleSheet.create({
  footerRelatorios: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center'
  },
  globalRelatorios: {
    width: '100%',
    height: '100%'
  },
  viewBox: {
    marginLeft: '12%',
    marginBottom: '10%'
  },
  textNavigator: {
    color: 'white',
    fontSize: 18
  },
  background: {
    position: 'absolute',
    left: 0,
    right: 0,
    top: 0,
    height: "100%"
  },
  imgFimRelatorios: {
    width: '15%',
    height: '100%',
    marginLeft: '10%',
    marginRight: '10%'
  },
  gastoContainerRelatorios: {
    color: 'red',
    fontSize: 21
  },
  valoresContainerRelatorios: {
    fontSize: 22,
    color: 'black',
    marginLeft: 3,
    marginTop: 15
  },
  textContainerRelatorios: {
    fontSize: 17,
    color: '#3EEB64'
  },
  dataContainerRelatorios: {
    fontSize: 19,
    marginLeft: 15
  },
  relatorioContainerImages: {
    width: '26%',
    height: '45%',
    marginRight: '5%',
    marginTop: '10%'
  },
  boxRelatorios: {
    marginTop: 20,
    alignItems: 'center',
    display: 'flex',
    justifyContent: 'space-around'
  },
  containerRelatorios: {
    backgroundColor: 'white',
    width: '85%',
    height: '30%',
    borderRadius: 30,
    marginBottom: 40,
    flexDirection: 'row',
    justifyContent: 'space-between'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,