b8880eb5bcbfe8bcb40cebb0aa460858
"use strict";

exports.__esModule = true;
exports.default = void 0;

var _ReactNativePropRegistry = _interopRequireDefault(require("./ReactNativePropRegistry"));

var _flattenStyle = _interopRequireDefault(require("./flattenStyle"));

var _validate = _interopRequireDefault(require("./validate"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var absoluteFillObject = {
  position: 'absolute',
  left: 0,
  right: 0,
  top: 0,
  bottom: 0
};

var absoluteFill = _ReactNativePropRegistry.default.register(absoluteFillObject);

var StyleSheet = {
  absoluteFill: absoluteFill,
  absoluteFillObject: absoluteFillObject,
  compose: function compose(style1, style2) {
    if (process.env.NODE_ENV !== 'production') {
      var len = arguments.length;

      if (len > 2) {
        var readableStyles = Array.prototype.slice.call(arguments).map(function (a) {
          return (0, _flattenStyle.default)(a);
        });
        throw new Error("StyleSheet.compose() only accepts 2 arguments, received " + len + ": " + JSON.stringify(readableStyles));
      }
    }

    if (style1 && style2) {
      return [style1, style2];
    } else {
      return style1 || style2;
    }
  },
  create: function create(styles) {
    var result = {};
    Object.keys(styles).forEach(function (key) {
      if (process.env.NODE_ENV !== 'production') {
        (0, _validate.default)(key, styles);
      }

      var id = styles[key] && _ReactNativePropRegistry.default.register(styles[key]);

      result[key] = id;
    });
    return result;
  },
  flatten: _flattenStyle.default,
  hairlineWidth: 1
};
var _default = StyleSheet;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN0eWxlU2hlZXQuanMiXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiX1JlYWN0TmF0aXZlUHJvcFJlZ2lzdHJ5IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfZmxhdHRlblN0eWxlIiwiX3ZhbGlkYXRlIiwib2JqIiwiYWJzb2x1dGVGaWxsT2JqZWN0IiwicG9zaXRpb24iLCJsZWZ0IiwicmlnaHQiLCJ0b3AiLCJib3R0b20iLCJhYnNvbHV0ZUZpbGwiLCJyZWdpc3RlciIsIlN0eWxlU2hlZXQiLCJjb21wb3NlIiwic3R5bGUxIiwic3R5bGUyIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwibGVuIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwicmVhZGFibGVTdHlsZXMiLCJBcnJheSIsInByb3RvdHlwZSIsInNsaWNlIiwiY2FsbCIsIm1hcCIsImEiLCJFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJjcmVhdGUiLCJzdHlsZXMiLCJyZXN1bHQiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsImlkIiwiZmxhdHRlbiIsImhhaXJsaW5lV2lkdGgiLCJfZGVmYXVsdCIsIm1vZHVsZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE9BQU8sQ0FBQ0MsVUFBUixHQUFxQixJQUFyQjtBQUNBRCxPQUFPLENBQUNFLE9BQVIsR0FBa0IsS0FBSyxDQUF2Qjs7QUFFQSxJQUFJQyx3QkFBd0IsR0FBR0Msc0JBQXNCLENBQUNDLE9BQU8sNkJBQVIsQ0FBckQ7O0FBRUEsSUFBSUMsYUFBYSxHQUFHRixzQkFBc0IsQ0FBQ0MsT0FBTyxrQkFBUixDQUExQzs7QUFFQSxJQUFJRSxTQUFTLEdBQUdILHNCQUFzQixDQUFDQyxPQUFPLGNBQVIsQ0FBdEM7O0FBRUEsU0FBU0Qsc0JBQVQsQ0FBZ0NJLEdBQWhDLEVBQXFDO0FBQUUsU0FBT0EsR0FBRyxJQUFJQSxHQUFHLENBQUNQLFVBQVgsR0FBd0JPLEdBQXhCLEdBQThCO0FBQUVOLElBQUFBLE9BQU8sRUFBRU07QUFBWCxHQUFyQztBQUF3RDs7QUFVL0YsSUFBSUMsa0JBQWtCLEdBQUc7QUFDdkJDLEVBQUFBLFFBQVEsRUFBRSxVQURhO0FBRXZCQyxFQUFBQSxJQUFJLEVBQUUsQ0FGaUI7QUFHdkJDLEVBQUFBLEtBQUssRUFBRSxDQUhnQjtBQUl2QkMsRUFBQUEsR0FBRyxFQUFFLENBSmtCO0FBS3ZCQyxFQUFBQSxNQUFNLEVBQUU7QUFMZSxDQUF6Qjs7QUFRQSxJQUFJQyxZQUFZLEdBQUdaLHdCQUF3QixDQUFDRCxPQUF6QixDQUFpQ2MsUUFBakMsQ0FBMENQLGtCQUExQyxDQUFuQjs7QUFFQSxJQUFJUSxVQUFVLEdBQUc7QUFDZkYsRUFBQUEsWUFBWSxFQUFFQSxZQURDO0FBRWZOLEVBQUFBLGtCQUFrQixFQUFFQSxrQkFGTDtBQUdmUyxFQUFBQSxPQUFPLEVBQUUsU0FBU0EsT0FBVCxDQUFpQkMsTUFBakIsRUFBeUJDLE1BQXpCLEVBQWlDO0FBQ3hDLFFBQUlDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFaLEtBQXlCLFlBQTdCLEVBQTJDO0FBRXpDLFVBQUlDLEdBQUcsR0FBR0MsU0FBUyxDQUFDQyxNQUFwQjs7QUFFQSxVQUFJRixHQUFHLEdBQUcsQ0FBVixFQUFhO0FBQ1gsWUFBSUcsY0FBYyxHQUFHQyxLQUFLLENBQUNDLFNBQU4sQ0FBZ0JDLEtBQWhCLENBQXNCQyxJQUF0QixDQUEyQk4sU0FBM0IsRUFBc0NPLEdBQXRDLENBQTBDLFVBQVVDLENBQVYsRUFBYTtBQUMxRSxpQkFBTyxDQUFDLEdBQUczQixhQUFhLENBQUNKLE9BQWxCLEVBQTJCK0IsQ0FBM0IsQ0FBUDtBQUNELFNBRm9CLENBQXJCO0FBR0EsY0FBTSxJQUFJQyxLQUFKLENBQVUsNkRBQTZEVixHQUE3RCxHQUFtRSxJQUFuRSxHQUEwRVcsSUFBSSxDQUFDQyxTQUFMLENBQWVULGNBQWYsQ0FBcEYsQ0FBTjtBQUNEO0FBR0Y7O0FBRUQsUUFBSVIsTUFBTSxJQUFJQyxNQUFkLEVBQXNCO0FBQ3BCLGFBQU8sQ0FBQ0QsTUFBRCxFQUFTQyxNQUFULENBQVA7QUFDRCxLQUZELE1BRU87QUFDTCxhQUFPRCxNQUFNLElBQUlDLE1BQWpCO0FBQ0Q7QUFDRixHQXZCYztBQXdCZmlCLEVBQUFBLE1BQU0sRUFBRSxTQUFTQSxNQUFULENBQWdCQyxNQUFoQixFQUF3QjtBQUM5QixRQUFJQyxNQUFNLEdBQUcsRUFBYjtBQUNBQyxJQUFBQSxNQUFNLENBQUNDLElBQVAsQ0FBWUgsTUFBWixFQUFvQkksT0FBcEIsQ0FBNEIsVUFBVUMsR0FBVixFQUFlO0FBQ3pDLFVBQUl0QixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixLQUF5QixZQUE3QixFQUEyQztBQUN6QyxTQUFDLEdBQUdoQixTQUFTLENBQUNMLE9BQWQsRUFBdUJ5QyxHQUF2QixFQUE0QkwsTUFBNUI7QUFDRDs7QUFFRCxVQUFJTSxFQUFFLEdBQUdOLE1BQU0sQ0FBQ0ssR0FBRCxDQUFOLElBQWV4Qyx3QkFBd0IsQ0FBQ0QsT0FBekIsQ0FBaUNjLFFBQWpDLENBQTBDc0IsTUFBTSxDQUFDSyxHQUFELENBQWhELENBQXhCOztBQUVBSixNQUFBQSxNQUFNLENBQUNJLEdBQUQsQ0FBTixHQUFjQyxFQUFkO0FBQ0QsS0FSRDtBQVNBLFdBQU9MLE1BQVA7QUFDRCxHQXBDYztBQXFDZk0sRUFBQUEsT0FBTyxFQUFFdkMsYUFBYSxDQUFDSixPQXJDUjtBQXdDZjRDLEVBQUFBLGFBQWEsRUFBRTtBQXhDQSxDQUFqQjtBQTBDQSxJQUFJQyxRQUFRLEdBQUc5QixVQUFmO0FBQ0FqQixPQUFPLENBQUNFLE9BQVIsR0FBa0I2QyxRQUFsQjtBQUNBQyxNQUFNLENBQUNoRCxPQUFQLEdBQWlCQSxPQUFPLENBQUNFLE9BQXpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfUmVhY3ROYXRpdmVQcm9wUmVnaXN0cnkgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL1JlYWN0TmF0aXZlUHJvcFJlZ2lzdHJ5XCIpKTtcblxudmFyIF9mbGF0dGVuU3R5bGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2ZsYXR0ZW5TdHlsZVwiKSk7XG5cbnZhciBfdmFsaWRhdGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3ZhbGlkYXRlXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE5pY29sYXMgR2FsbGFnaGVyLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIFxuICovXG52YXIgYWJzb2x1dGVGaWxsT2JqZWN0ID0ge1xuICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgbGVmdDogMCxcbiAgcmlnaHQ6IDAsXG4gIHRvcDogMCxcbiAgYm90dG9tOiAwXG59O1xuXG52YXIgYWJzb2x1dGVGaWxsID0gX1JlYWN0TmF0aXZlUHJvcFJlZ2lzdHJ5LmRlZmF1bHQucmVnaXN0ZXIoYWJzb2x1dGVGaWxsT2JqZWN0KTtcblxudmFyIFN0eWxlU2hlZXQgPSB7XG4gIGFic29sdXRlRmlsbDogYWJzb2x1dGVGaWxsLFxuICBhYnNvbHV0ZUZpbGxPYmplY3Q6IGFic29sdXRlRmlsbE9iamVjdCxcbiAgY29tcG9zZTogZnVuY3Rpb24gY29tcG9zZShzdHlsZTEsIHN0eWxlMikge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAvKiBlc2xpbnQtZGlzYWJsZSBwcmVmZXItcmVzdC1wYXJhbXMgKi9cbiAgICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuXG4gICAgICBpZiAobGVuID4gMikge1xuICAgICAgICB2YXIgcmVhZGFibGVTdHlsZXMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpLm1hcChmdW5jdGlvbiAoYSkge1xuICAgICAgICAgIHJldHVybiAoMCwgX2ZsYXR0ZW5TdHlsZS5kZWZhdWx0KShhKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlN0eWxlU2hlZXQuY29tcG9zZSgpIG9ubHkgYWNjZXB0cyAyIGFyZ3VtZW50cywgcmVjZWl2ZWQgXCIgKyBsZW4gKyBcIjogXCIgKyBKU09OLnN0cmluZ2lmeShyZWFkYWJsZVN0eWxlcykpO1xuICAgICAgfVxuICAgICAgLyogZXNsaW50LWVuYWJsZSBwcmVmZXItcmVzdC1wYXJhbXMgKi9cblxuICAgIH1cblxuICAgIGlmIChzdHlsZTEgJiYgc3R5bGUyKSB7XG4gICAgICByZXR1cm4gW3N0eWxlMSwgc3R5bGUyXTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHN0eWxlMSB8fCBzdHlsZTI7XG4gICAgfVxuICB9LFxuICBjcmVhdGU6IGZ1bmN0aW9uIGNyZWF0ZShzdHlsZXMpIHtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgT2JqZWN0LmtleXMoc3R5bGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICgwLCBfdmFsaWRhdGUuZGVmYXVsdCkoa2V5LCBzdHlsZXMpO1xuICAgICAgfVxuXG4gICAgICB2YXIgaWQgPSBzdHlsZXNba2V5XSAmJiBfUmVhY3ROYXRpdmVQcm9wUmVnaXN0cnkuZGVmYXVsdC5yZWdpc3RlcihzdHlsZXNba2V5XSk7XG5cbiAgICAgIHJlc3VsdFtrZXldID0gaWQ7XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfSxcbiAgZmxhdHRlbjogX2ZsYXR0ZW5TdHlsZS5kZWZhdWx0LFxuICAvLyBgaGFpcmxpbmVXaWR0aGAgaXMgbm90IGltcGxlbWVudGVkIHVzaW5nIHNjcmVlbiBkZW5zaXR5IGFzIGJyb3dzZXJzIG1heVxuICAvLyByb3VuZCBzdWItcGl4ZWwgdmFsdWVzIGRvd24gdG8gYDBgLCBjYXVzaW5nIHRoZSBsaW5lIG5vdCB0byBiZSByZW5kZXJlZC5cbiAgaGFpcmxpbmVXaWR0aDogMVxufTtcbnZhciBfZGVmYXVsdCA9IFN0eWxlU2hlZXQ7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0OyJdfQ==