0e261e11e42bc18e0d473189819961f3
'use strict';

exports.__esModule = true;
exports.default = void 0;

var _EventSubscription3 = _interopRequireDefault(require("./_EventSubscription"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;

  _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

var EmitterSubscription = function (_EventSubscription2) {
  _inheritsLoose(EmitterSubscription, _EventSubscription2);

  function EmitterSubscription(emitter, subscriber, listener, context) {
    var _this;

    _this = _EventSubscription2.call(this, subscriber) || this;
    _this.emitter = emitter;
    _this.listener = listener;
    _this.context = context;
    return _this;
  }

  var _proto = EmitterSubscription.prototype;

  _proto.remove = function remove() {
    this.emitter.removeSubscription(this);
  };

  return EmitterSubscription;
}(_EventSubscription3.default);

var _default = EmitterSubscription;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9FbWl0dGVyU3Vic2NyaXB0aW9uLmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9FdmVudFN1YnNjcmlwdGlvbjMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIm9iaiIsIl9pbmhlcml0c0xvb3NlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJfc2V0UHJvdG90eXBlT2YiLCJvIiwicCIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiRW1pdHRlclN1YnNjcmlwdGlvbiIsIl9FdmVudFN1YnNjcmlwdGlvbjIiLCJlbWl0dGVyIiwic3Vic2NyaWJlciIsImxpc3RlbmVyIiwiY29udGV4dCIsIl90aGlzIiwiY2FsbCIsIl9wcm90byIsInJlbW92ZSIsInJlbW92ZVN1YnNjcmlwdGlvbiIsIl9kZWZhdWx0IiwibW9kdWxlIl0sIm1hcHBpbmdzIjoiQUFTQTs7QUFFQUEsT0FBTyxDQUFDQyxVQUFSLEdBQXFCLElBQXJCO0FBQ0FELE9BQU8sQ0FBQ0UsT0FBUixHQUFrQixLQUFLLENBQXZCOztBQUVBLElBQUlDLG1CQUFtQixHQUFHQyxzQkFBc0IsQ0FBQ0MsT0FBTyx3QkFBUixDQUFoRDs7QUFFQSxTQUFTRCxzQkFBVCxDQUFnQ0UsR0FBaEMsRUFBcUM7QUFBRSxTQUFPQSxHQUFHLElBQUlBLEdBQUcsQ0FBQ0wsVUFBWCxHQUF3QkssR0FBeEIsR0FBOEI7QUFBRUosSUFBQUEsT0FBTyxFQUFFSTtBQUFYLEdBQXJDO0FBQXdEOztBQUUvRixTQUFTQyxjQUFULENBQXdCQyxRQUF4QixFQUFrQ0MsVUFBbEMsRUFBOEM7QUFBRUQsRUFBQUEsUUFBUSxDQUFDRSxTQUFULEdBQXFCQyxNQUFNLENBQUNDLE1BQVAsQ0FBY0gsVUFBVSxDQUFDQyxTQUF6QixDQUFyQjtBQUEwREYsRUFBQUEsUUFBUSxDQUFDRSxTQUFULENBQW1CRyxXQUFuQixHQUFpQ0wsUUFBakM7O0FBQTJDTSxFQUFBQSxlQUFlLENBQUNOLFFBQUQsRUFBV0MsVUFBWCxDQUFmO0FBQXdDOztBQUU3TCxTQUFTSyxlQUFULENBQXlCQyxDQUF6QixFQUE0QkMsQ0FBNUIsRUFBK0I7QUFBRUYsRUFBQUEsZUFBZSxHQUFHSCxNQUFNLENBQUNNLGNBQVAsSUFBeUIsU0FBU0gsZUFBVCxDQUF5QkMsQ0FBekIsRUFBNEJDLENBQTVCLEVBQStCO0FBQUVELElBQUFBLENBQUMsQ0FBQ0csU0FBRixHQUFjRixDQUFkO0FBQWlCLFdBQU9ELENBQVA7QUFBVyxHQUF4Rzs7QUFBMEcsU0FBT0QsZUFBZSxDQUFDQyxDQUFELEVBQUlDLENBQUosQ0FBdEI7QUFBK0I7O0FBSzFLLElBQUlHLG1CQUFtQixHQUFnQixVQUFVQyxtQkFBVixFQUErQjtBQUNwRWIsRUFBQUEsY0FBYyxDQUFDWSxtQkFBRCxFQUFzQkMsbUJBQXRCLENBQWQ7O0FBWUEsV0FBU0QsbUJBQVQsQ0FBNkJFLE9BQTdCLEVBQXNDQyxVQUF0QyxFQUFrREMsUUFBbEQsRUFBNERDLE9BQTVELEVBQXFFO0FBQ25FLFFBQUlDLEtBQUo7O0FBRUFBLElBQUFBLEtBQUssR0FBR0wsbUJBQW1CLENBQUNNLElBQXBCLENBQXlCLElBQXpCLEVBQStCSixVQUEvQixLQUE4QyxJQUF0RDtBQUNBRyxJQUFBQSxLQUFLLENBQUNKLE9BQU4sR0FBZ0JBLE9BQWhCO0FBQ0FJLElBQUFBLEtBQUssQ0FBQ0YsUUFBTixHQUFpQkEsUUFBakI7QUFDQUUsSUFBQUEsS0FBSyxDQUFDRCxPQUFOLEdBQWdCQSxPQUFoQjtBQUNBLFdBQU9DLEtBQVA7QUFDRDs7QUFTRCxNQUFJRSxNQUFNLEdBQUdSLG1CQUFtQixDQUFDVCxTQUFqQzs7QUFFQWlCLEVBQUFBLE1BQU0sQ0FBQ0MsTUFBUCxHQUFnQixTQUFTQSxNQUFULEdBQWtCO0FBQ2hDLFNBQUtQLE9BQUwsQ0FBYVEsa0JBQWIsQ0FBZ0MsSUFBaEM7QUFDRCxHQUZEOztBQUlBLFNBQU9WLG1CQUFQO0FBQ0QsQ0FyQ3NDLENBcUNyQ2hCLG1CQUFtQixDQUFDRCxPQXJDaUIsQ0FBdkM7O0FBdUNBLElBQUk0QixRQUFRLEdBQUdYLG1CQUFmO0FBQ0FuQixPQUFPLENBQUNFLE9BQVIsR0FBa0I0QixRQUFsQjtBQUNBQyxNQUFNLENBQUMvQixPQUFQLEdBQWlCQSxPQUFPLENBQUNFLE9BQXpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX0V2ZW50U3Vic2NyaXB0aW9uMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vX0V2ZW50U3Vic2NyaXB0aW9uXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7IHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzOyBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9XG5cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9XG5cbi8qKlxuICogRW1pdHRlclN1YnNjcmlwdGlvbiByZXByZXNlbnRzIGEgc3Vic2NyaXB0aW9uIHdpdGggbGlzdGVuZXIgYW5kIGNvbnRleHQgZGF0YS5cbiAqL1xudmFyIEVtaXR0ZXJTdWJzY3JpcHRpb24gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9FdmVudFN1YnNjcmlwdGlvbjIpIHtcbiAgX2luaGVyaXRzTG9vc2UoRW1pdHRlclN1YnNjcmlwdGlvbiwgX0V2ZW50U3Vic2NyaXB0aW9uMik7XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7RXZlbnRFbWl0dGVyfSBlbWl0dGVyIC0gVGhlIGV2ZW50IGVtaXR0ZXIgdGhhdCByZWdpc3RlcmVkIHRoaXNcbiAgICogICBzdWJzY3JpcHRpb25cbiAgICogQHBhcmFtIHtFdmVudFN1YnNjcmlwdGlvblZlbmRvcn0gc3Vic2NyaWJlciAtIFRoZSBzdWJzY3JpYmVyIHRoYXQgY29udHJvbHNcbiAgICogICB0aGlzIHN1YnNjcmlwdGlvblxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBsaXN0ZW5lciAtIEZ1bmN0aW9uIHRvIGludm9rZSB3aGVuIHRoZSBzcGVjaWZpZWQgZXZlbnQgaXNcbiAgICogICBlbWl0dGVkXG4gICAqIEBwYXJhbSB7Kn0gY29udGV4dCAtIE9wdGlvbmFsIGNvbnRleHQgb2JqZWN0IHRvIHVzZSB3aGVuIGludm9raW5nIHRoZVxuICAgKiAgIGxpc3RlbmVyXG4gICAqL1xuICBmdW5jdGlvbiBFbWl0dGVyU3Vic2NyaXB0aW9uKGVtaXR0ZXIsIHN1YnNjcmliZXIsIGxpc3RlbmVyLCBjb250ZXh0KSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfRXZlbnRTdWJzY3JpcHRpb24yLmNhbGwodGhpcywgc3Vic2NyaWJlcikgfHwgdGhpcztcbiAgICBfdGhpcy5lbWl0dGVyID0gZW1pdHRlcjtcbiAgICBfdGhpcy5saXN0ZW5lciA9IGxpc3RlbmVyO1xuICAgIF90aGlzLmNvbnRleHQgPSBjb250ZXh0O1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICAvKipcbiAgICogUmVtb3ZlcyB0aGlzIHN1YnNjcmlwdGlvbiBmcm9tIHRoZSBlbWl0dGVyIHRoYXQgcmVnaXN0ZXJlZCBpdC5cbiAgICogTm90ZTogd2UncmUgb3ZlcnJpZGluZyB0aGUgYHJlbW92ZSgpYCBtZXRob2Qgb2YgX0V2ZW50U3Vic2NyaXB0aW9uIGhlcmVcbiAgICogYnV0IGRlbGliZXJhdGVseSBub3QgY2FsbGluZyBgc3VwZXIucmVtb3ZlKClgIGFzIHRoZSByZXNwb25zaWJpbGl0eVxuICAgKiBmb3IgcmVtb3ZpbmcgdGhlIHN1YnNjcmlwdGlvbiBsaWVzIHdpdGggdGhlIEV2ZW50RW1pdHRlci5cbiAgICovXG5cblxuICB2YXIgX3Byb3RvID0gRW1pdHRlclN1YnNjcmlwdGlvbi5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICB0aGlzLmVtaXR0ZXIucmVtb3ZlU3Vic2NyaXB0aW9uKHRoaXMpO1xuICB9O1xuXG4gIHJldHVybiBFbWl0dGVyU3Vic2NyaXB0aW9uO1xufShfRXZlbnRTdWJzY3JpcHRpb24zLmRlZmF1bHQpO1xuXG52YXIgX2RlZmF1bHQgPSBFbWl0dGVyU3Vic2NyaXB0aW9uO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDsiXX0=