956d8d8e1a20f0d4ec7687ee8e155af7
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _Button = _interopRequireDefault(require("../../components/Botao/Button"));

var _expoLinearGradient = require("expo-linear-gradient");

var _config = _interopRequireDefault(require("./config"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var styles = _reactNative.StyleSheet.create({
  container: {
    alignItems: 'center',
    paddingTop: 120
  },
  input_texto: {
    width: 270,
    height: 50,
    borderRadius: 20,
    textAlign: 'center',
    marginBottom: 10,
    backgroundColor: 'rgba(52, 52, 52, 0.3)',
    fontWeight: 'bold',
    color: 'white'
  },
  texto_conexao: {
    alignItems: 'center',
    marginTop: 60,
    paddingRight: 60
  },
  contate: {
    alignItems: 'center',
    marginTop: 2,
    paddingRight: 90
  },
  contate_texto: {
    color: 'red'
  },
  imgem: {
    width: 150,
    height: 150,
    marginBottom: 50
  },
  background: {
    width: '100%',
    height: '100%',
    display: 'flex',
    flexDirection: 'column'
  },
  problemas_texto: {
    color: 'white',
    fontWeight: 'bold'
  }
});

var DimissKeyboard = function DimissKeyboard(_ref) {
  var children = _ref.children;
  return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
    onPress: function onPress() {
      return _reactNative.Keyboard.dismiss();
    }
  }, children);
};

var Login = function Login(_ref2) {
  var navigation = _ref2.navigation;

  var _useState = (0, _react.useState)(""),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      email = _useState2[0],
      setEmail = _useState2[1];

  var _useState3 = (0, _react.useState)(""),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      password = _useState4[0],
      setPassword = _useState4[1];

  var onSubmit = function onSubmit() {
    var form, _await$Instance$post, data, status;

    return _regenerator.default.async(function onSubmit$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            form = {
              username: email,
              password: password
            };
            _context.prev = 1;
            _context.next = 4;
            return _regenerator.default.awrap(_config.default.post('/auth', JSON.stringify(form)));

          case 4:
            _await$Instance$post = _context.sent;
            data = _await$Instance$post.data;
            status = _await$Instance$post.status;
            navigation.navigate("Veiculos");
            _context.next = 14;
            break;

          case 10:
            _context.prev = 10;
            _context.t0 = _context["catch"](1);
            alert("Email ou senha incorretos!");
            console.log("ERROR: " + _context.t0);

          case 14:
          case "end":
            return _context.stop();
        }
      }
    }, null, null, [[1, 10]], Promise);
  };

  return _react.default.createElement(_reactNative.KeyboardAvoidingView, {
    behavior: _reactNative.Platform.OS == 'ios' ? "padding" : "height"
  }, _react.default.createElement(DimissKeyboard, null, _react.default.createElement(_expoLinearGradient.LinearGradient, {
    colors: ['#70F6C6', '#227878', '#227878'],
    style: styles.background
  }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
    style: styles.container
  }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Image, {
    style: styles.imgem,
    source: require("../../assets/CasaDoOleoIcon.png")
  })), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.TextInput, {
    onChangeText: setEmail,
    placeholder: "E-mail",
    "data-testid": "email",
    placeholderTextColor: "#ffff",
    style: styles.input_texto
  })), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.TextInput, {
    onChangeText: setPassword,
    secureTextEntry: true,
    "data-testid": "senha",
    placeholderTextColor: "#ffff",
    placeholder: "Senha",
    style: styles.input_texto
  })), _react.default.createElement(_Button.default, {
    labelButton: "Login",
    onPress: onSubmit
  })), _react.default.createElement(_reactNative.View, {
    style: styles.texto_conexao
  }, _react.default.createElement(_reactNative.Text, {
    style: styles.problemas_texto
  }, "Problemas para se conectar?")), _react.default.createElement(_reactNative.View, {
    style: styles.contate
  }, _react.default.createElement(_reactNative.Text, {
    style: styles.contate_texto
  }, "Contate a casa do Oleo"))))));
};

var _default = Login;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,