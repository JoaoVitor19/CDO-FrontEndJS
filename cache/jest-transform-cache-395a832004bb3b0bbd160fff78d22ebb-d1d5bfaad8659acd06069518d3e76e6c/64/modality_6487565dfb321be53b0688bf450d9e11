b4d2c6ff6a184f20170a7af53480969c
"use strict";

exports.__esModule = true;
exports.default = void 0;

var _ExecutionEnvironment = require("fbjs/lib/ExecutionEnvironment");

var focusVisibleAttributeName = 'data-focusvisible-polyfill';
var rule = ":focus:not([" + focusVisibleAttributeName + "]){outline: none;}";

var modality = function modality(insertRule) {
  insertRule(rule);

  if (!_ExecutionEnvironment.canUseDOM) {
    return;
  }

  var hadKeyboardEvent = true;
  var hadFocusVisibleRecently = false;
  var hadFocusVisibleRecentlyTimeout = null;
  var inputTypesWhitelist = {
    text: true,
    search: true,
    url: true,
    tel: true,
    email: true,
    password: true,
    number: true,
    date: true,
    month: true,
    week: true,
    time: true,
    datetime: true,
    'datetime-local': true
  };

  function isValidFocusTarget(el) {
    if (el && el !== document && el.nodeName !== 'HTML' && el.nodeName !== 'BODY' && 'classList' in el && 'contains' in el.classList) {
      return true;
    }

    return false;
  }

  function focusTriggersKeyboardModality(el) {
    var type = el.type;
    var tagName = el.tagName;
    var isReadOnly = el.readOnly;

    if (tagName === 'INPUT' && inputTypesWhitelist[type] && !isReadOnly) {
      return true;
    }

    if (tagName === 'TEXTAREA' && !isReadOnly) {
      return true;
    }

    if (el.isContentEditable) {
      return true;
    }

    return false;
  }

  function addFocusVisibleAttribute(el) {
    if (el.hasAttribute(focusVisibleAttributeName)) {
      return;
    }

    el.setAttribute(focusVisibleAttributeName, true);
  }

  function removeFocusVisibleAttribute(el) {
    el.removeAttribute(focusVisibleAttributeName);
  }

  function removeAllFocusVisibleAttributes() {
    var list = document.querySelectorAll("[" + focusVisibleAttributeName + "]");

    for (var i = 0; i < list.length; i += 1) {
      removeFocusVisibleAttribute(list[i]);
    }
  }

  function onKeyDown(e) {
    if (e.key !== 'Tab' && (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)) {
      return;
    }

    if (isValidFocusTarget(document.activeElement)) {
      addFocusVisibleAttribute(document.activeElement);
    }

    hadKeyboardEvent = true;
  }

  function onPointerDown(e) {
    if (hadKeyboardEvent === true) {
      removeAllFocusVisibleAttributes();
    }

    hadKeyboardEvent = false;
  }

  function onFocus(e) {
    if (!isValidFocusTarget(e.target)) {
      return;
    }

    if (hadKeyboardEvent || focusTriggersKeyboardModality(e.target)) {
      addFocusVisibleAttribute(e.target);
    }
  }

  function onBlur(e) {
    if (!isValidFocusTarget(e.target)) {
      return;
    }

    if (e.target.hasAttribute(focusVisibleAttributeName)) {
      hadFocusVisibleRecently = true;
      window.clearTimeout(hadFocusVisibleRecentlyTimeout);
      hadFocusVisibleRecentlyTimeout = window.setTimeout(function () {
        hadFocusVisibleRecently = false;
        window.clearTimeout(hadFocusVisibleRecentlyTimeout);
      }, 100);
      removeFocusVisibleAttribute(e.target);
    }
  }

  function onVisibilityChange(e) {
    if (document.visibilityState === 'hidden') {
      if (hadFocusVisibleRecently) {
        hadKeyboardEvent = true;
      }

      addInitialPointerMoveListeners();
    }
  }

  function addInitialPointerMoveListeners() {
    document.addEventListener('mousemove', onInitialPointerMove);
    document.addEventListener('mousedown', onInitialPointerMove);
    document.addEventListener('mouseup', onInitialPointerMove);
    document.addEventListener('pointermove', onInitialPointerMove);
    document.addEventListener('pointerdown', onInitialPointerMove);
    document.addEventListener('pointerup', onInitialPointerMove);
    document.addEventListener('touchmove', onInitialPointerMove);
    document.addEventListener('touchstart', onInitialPointerMove);
    document.addEventListener('touchend', onInitialPointerMove);
  }

  function removeInitialPointerMoveListeners() {
    document.removeEventListener('mousemove', onInitialPointerMove);
    document.removeEventListener('mousedown', onInitialPointerMove);
    document.removeEventListener('mouseup', onInitialPointerMove);
    document.removeEventListener('pointermove', onInitialPointerMove);
    document.removeEventListener('pointerdown', onInitialPointerMove);
    document.removeEventListener('pointerup', onInitialPointerMove);
    document.removeEventListener('touchmove', onInitialPointerMove);
    document.removeEventListener('touchstart', onInitialPointerMove);
    document.removeEventListener('touchend', onInitialPointerMove);
  }

  function onInitialPointerMove(e) {
    if (e.target.nodeName === 'HTML') {
      return;
    }

    hadKeyboardEvent = false;
    removeInitialPointerMoveListeners();
  }

  document.addEventListener('keydown', onKeyDown, true);
  document.addEventListener('mousedown', onPointerDown, true);
  document.addEventListener('pointerdown', onPointerDown, true);
  document.addEventListener('touchstart', onPointerDown, true);
  document.addEventListener('focus', onFocus, true);
  document.addEventListener('blur', onBlur, true);
  document.addEventListener('visibilitychange', onVisibilityChange, true);
  addInitialPointerMoveListeners();
};

var _default = modality;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGFsaXR5LmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9FeGVjdXRpb25FbnZpcm9ubWVudCIsInJlcXVpcmUiLCJmb2N1c1Zpc2libGVBdHRyaWJ1dGVOYW1lIiwicnVsZSIsIm1vZGFsaXR5IiwiaW5zZXJ0UnVsZSIsImNhblVzZURPTSIsImhhZEtleWJvYXJkRXZlbnQiLCJoYWRGb2N1c1Zpc2libGVSZWNlbnRseSIsImhhZEZvY3VzVmlzaWJsZVJlY2VudGx5VGltZW91dCIsImlucHV0VHlwZXNXaGl0ZWxpc3QiLCJ0ZXh0Iiwic2VhcmNoIiwidXJsIiwidGVsIiwiZW1haWwiLCJwYXNzd29yZCIsIm51bWJlciIsImRhdGUiLCJtb250aCIsIndlZWsiLCJ0aW1lIiwiZGF0ZXRpbWUiLCJpc1ZhbGlkRm9jdXNUYXJnZXQiLCJlbCIsImRvY3VtZW50Iiwibm9kZU5hbWUiLCJjbGFzc0xpc3QiLCJmb2N1c1RyaWdnZXJzS2V5Ym9hcmRNb2RhbGl0eSIsInR5cGUiLCJ0YWdOYW1lIiwiaXNSZWFkT25seSIsInJlYWRPbmx5IiwiaXNDb250ZW50RWRpdGFibGUiLCJhZGRGb2N1c1Zpc2libGVBdHRyaWJ1dGUiLCJoYXNBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJyZW1vdmVGb2N1c1Zpc2libGVBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJyZW1vdmVBbGxGb2N1c1Zpc2libGVBdHRyaWJ1dGVzIiwibGlzdCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpIiwibGVuZ3RoIiwib25LZXlEb3duIiwiZSIsImtleSIsIm1ldGFLZXkiLCJhbHRLZXkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJhY3RpdmVFbGVtZW50Iiwib25Qb2ludGVyRG93biIsIm9uRm9jdXMiLCJ0YXJnZXQiLCJvbkJsdXIiLCJ3aW5kb3ciLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0Iiwib25WaXNpYmlsaXR5Q2hhbmdlIiwidmlzaWJpbGl0eVN0YXRlIiwiYWRkSW5pdGlhbFBvaW50ZXJNb3ZlTGlzdGVuZXJzIiwiYWRkRXZlbnRMaXN0ZW5lciIsIm9uSW5pdGlhbFBvaW50ZXJNb3ZlIiwicmVtb3ZlSW5pdGlhbFBvaW50ZXJNb3ZlTGlzdGVuZXJzIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIl9kZWZhdWx0IiwibW9kdWxlIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQUEsT0FBTyxDQUFDQyxVQUFSLEdBQXFCLElBQXJCO0FBQ0FELE9BQU8sQ0FBQ0UsT0FBUixHQUFrQixLQUFLLENBQXZCOztBQUVBLElBQUlDLHFCQUFxQixHQUFHQyxPQUFPLENBQUMsK0JBQUQsQ0FBbkM7O0FBcUJBLElBQUlDLHlCQUF5QixHQUFHLDRCQUFoQztBQUNBLElBQUlDLElBQUksR0FBRyxpQkFBaUJELHlCQUFqQixHQUE2QyxvQkFBeEQ7O0FBRUEsSUFBSUUsUUFBUSxHQUFHLFNBQVNBLFFBQVQsQ0FBa0JDLFVBQWxCLEVBQThCO0FBQzNDQSxFQUFBQSxVQUFVLENBQUNGLElBQUQsQ0FBVjs7QUFFQSxNQUFJLENBQUNILHFCQUFxQixDQUFDTSxTQUEzQixFQUFzQztBQUNwQztBQUNEOztBQUVELE1BQUlDLGdCQUFnQixHQUFHLElBQXZCO0FBQ0EsTUFBSUMsdUJBQXVCLEdBQUcsS0FBOUI7QUFDQSxNQUFJQyw4QkFBOEIsR0FBRyxJQUFyQztBQUNBLE1BQUlDLG1CQUFtQixHQUFHO0FBQ3hCQyxJQUFBQSxJQUFJLEVBQUUsSUFEa0I7QUFFeEJDLElBQUFBLE1BQU0sRUFBRSxJQUZnQjtBQUd4QkMsSUFBQUEsR0FBRyxFQUFFLElBSG1CO0FBSXhCQyxJQUFBQSxHQUFHLEVBQUUsSUFKbUI7QUFLeEJDLElBQUFBLEtBQUssRUFBRSxJQUxpQjtBQU14QkMsSUFBQUEsUUFBUSxFQUFFLElBTmM7QUFPeEJDLElBQUFBLE1BQU0sRUFBRSxJQVBnQjtBQVF4QkMsSUFBQUEsSUFBSSxFQUFFLElBUmtCO0FBU3hCQyxJQUFBQSxLQUFLLEVBQUUsSUFUaUI7QUFVeEJD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O0FBQ0F0QyxJQUFBQSxRQUFRLENBQUNxQyxnQkFBVCxDQUEwQixXQUExQixFQUF1Q0Msb0JBQXZDO0FBQ0F0QyxJQUFBQSxRQUFRLENBQUNxQyxnQkFBVCxDQUEwQixTQUExQixFQUFxQ0Msb0JBQXJDO0FBQ0F0QyxJQUFBQSxRQUFRLENBQUNxQyxnQkFBVCxDQUEwQixhQUExQixFQUF5Q0Msb0JBQXpDO0FBQ0F0QyxJQUFBQSxRQUFRLENBQUNxQyxnQkFBVCxDQUEwQixhQUExQixFQUF5Q0Msb0JBQXpDO0FBQ0F0QyxJQUFBQSxRQUFRLENBQUNxQyxnQkFBVCxDQUEwQixXQUExQixFQUF1Q0Msb0JBQXZDO0FBQ0F0QyxJQUFBQSxRQUFRLENBQUNxQyxnQkFBVCxDQUEwQixXQUExQixFQUF1Q0Msb0JBQXZDO0FBQ0F0QyxJQUFBQSxRQUFRLENBQUNxQyxnQkFBVCxDQUEwQixZQUExQixFQUF3Q0Msb0JBQXhDO0FBQ0F0QyxJQUFBQSxRQUFRLENBQUNxQyxnQkFBVCxDQUEwQixVQUExQixFQUFzQ0Msb0JBQXRDO0FBQ0Q7O0FBRUQsV0FBU0MsaUNBQVQsR0FBNkM7QUFDM0N2QyxJQUFBQSxRQUFRLENBQUN3QyxtQkFBVCxDQUE2QixXQUE3QixFQUEwQ0Ysb0JBQTFDO0FBQ0F0QyxJQUFBQSxRQUFRLENBQUN3QyxtQkFBVCxDQUE2QixXQUE3QixFQUEwQ0Ysb0JBQTFDO0FBQ0F0QyxJQUFBQSxRQUFRLENBQUN3QyxtQkFBVCxDQUE2QixTQUE3QixFQUF3Q0Ysb0JBQXhDO0FBQ0F0QyxJQUFBQSxRQUFRLENBQUN3QyxtQkFBVCxDQUE2QixhQUE3QixFQUE0Q0Ysb0JBQTVDO0FBQ0F0QyxJQUFBQSxRQUFRLENBQUN3QyxtQkFBVCxDQUE2QixhQUE3QixFQUE0Q0Ysb0JBQTVDO0FBQ0F0QyxJQUFBQSxRQUFRLENBQUN3QyxtQkFBVCxDQUE2QixXQUE3QixFQUEwQ0Ysb0JBQTFDO0FBQ0F0QyxJQUFBQSxRQUFRLENBQUN3QyxtQkFBVCxDQUE2QixXQUE3QixFQUEwQ0Ysb0JBQTFDO0FBQ0F0QyxJQUFBQSxRQUFRLENBQUN3QyxtQkFBVCxDQUE2QixZQUE3QixFQUEyQ0Ysb0JBQTNDO0FBQ0F0QyxJQUFBQSxRQUFRLENBQUN3QyxtQkFBVCxDQUE2QixVQUE3QixFQUF5Q0Ysb0JBQXpDO0FBQ0Q7O0FBU0QsV0FBU0Esb0JBQVQsQ0FBOEJsQixDQUE5QixFQUFpQztBQUcvQixRQUFJQSxDQUFDLENBQUNTLE1BQUYsQ0FBUzVCLFFBQVQsS0FBc0IsTUFBMUIsRUFBa0M7QUFDaEM7QUFDRDs7QUFFRG5CLElBQUFBLGdCQUFnQixHQUFHLEtBQW5CO0FBQ0F5RCxJQUFBQSxpQ0FBaUM7QUFDbEM7O0FBRUR2QyxFQUFBQSxRQUFRLENBQUNxQyxnQkFBVCxDQUEwQixTQUExQixFQUFxQ2xCLFNBQXJDLEVBQWdELElBQWhEO0FBQ0FuQixFQUFBQSxRQUFRLENBQUNxQyxnQkFBVCxDQUEwQixXQUExQixFQUF1Q1YsYUFBdkMsRUFBc0QsSUFBdEQ7QUFDQTNCLEVBQUFBLFFBQVEsQ0FBQ3FDLGdCQUFULENBQTBCLGFBQTFCLEVBQXlDVixhQUF6QyxFQUF3RCxJQUF4RDtBQUNBM0IsRUFBQUEsUUFBUSxDQUFDcUMsZ0JBQVQsQ0FBMEIsWUFBMUIsRUFBd0NWLGFBQXhDLEVBQXVELElBQXZEO0FBQ0EzQixFQUFBQSxRQUFRLENBQUNxQyxnQkFBVCxDQUEwQixPQUExQixFQUFtQ1QsT0FBbkMsRUFBNEMsSUFBNUM7QUFDQTVCLEVBQUFBLFFBQVEsQ0FBQ3FDLGdCQUFULENBQTBCLE1BQTFCLEVBQWtDUCxNQUFsQyxFQUEwQyxJQUExQztBQUNBOUIsRUFBQUEsUUFBUSxDQUFDcUMsZ0JBQVQsQ0FBMEIsa0JBQTFCLEVBQThDSCxrQkFBOUMsRUFBa0UsSUFBbEU7QUFDQUUsRUFBQUEsOEJBQThCO0FBQy9CLENBOVBEOztBQWdRQSxJQUFJSyxRQUFRLEdBQUc5RCxRQUFmO0FBQ0FQLE9BQU8sQ0FBQ0UsT0FBUixHQUFrQm1FLFFBQWxCO0FBQ0FDLE1BQU0sQ0FBQ3RFLE9BQVAsR0FBaUJBLE9BQU8sQ0FBQ0UsT0FBekIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9FeGVjdXRpb25FbnZpcm9ubWVudCA9IHJlcXVpcmUoXCJmYmpzL2xpYi9FeGVjdXRpb25FbnZpcm9ubWVudFwiKTtcblxuLyoqXG4gKiBBZGFwdHMgZm9jdXMgc3R5bGVzIGJhc2VkIG9uIHRoZSB1c2VyJ3MgYWN0aXZlIGlucHV0IG1vZGFsaXR5IChpLmUuLCBob3dcbiAqIHRoZXkgYXJlIGludGVyYWN0aW5nIHdpdGggdGhlIFVJIHJpZ2h0IG5vdykuXG4gKlxuICogRm9jdXMgc3R5bGVzIGFyZSBvbmx5IHJlbGV2YW50IHdoZW4gdXNpbmcgdGhlIGtleWJvYXJkIHRvIGludGVyYWN0IHdpdGggdGhlXG4gKiBwYWdlLiBJZiB3ZSBvbmx5IHNob3cgdGhlIGZvY3VzIHJpbmcgd2hlbiByZWxldmFudCwgd2UgY2FuIGF2b2lkIHVzZXJcbiAqIGNvbmZ1c2lvbiB3aXRob3V0IGNvbXByb21pc2luZyBhY2Nlc3NpYmlsaXR5LlxuICpcbiAqIFRoZSBzY3JpcHQgdXNlcyB0d28gaGV1cmlzdGljcyB0byBkZXRlcm1pbmUgd2hldGhlciB0aGUga2V5Ym9hcmQgaXMgYmVpbmcgdXNlZDpcbiAqXG4gKiAxLiBhIGtleWRvd24gZXZlbnQgb2NjdXJyZWQgaW1tZWRpYXRlbHkgYmVmb3JlIGEgZm9jdXMgZXZlbnQ7XG4gKiAyLiBhIGZvY3VzIGV2ZW50IGhhcHBlbmVkIG9uIGFuIGVsZW1lbnQgd2hpY2ggcmVxdWlyZXMga2V5Ym9hcmQgaW50ZXJhY3Rpb24gKGUuZy4sIGEgdGV4dCBmaWVsZCk7XG4gKlxuICogVGhpcyBzb2Z0d2FyZSBvciBkb2N1bWVudCBpbmNsdWRlcyBtYXRlcmlhbCBjb3BpZWQgZnJvbSBvciBkZXJpdmVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL1dJQ0cvZm9jdXMtdmlzaWJsZS5cbiAqIENvcHlyaWdodCDCqSAyMDE4IFczQ8KuIChNSVQsIEVSQ0lNLCBLZWlvLCBCZWloYW5nKS5cbiAqIFczQyBTb2Z0d2FyZSBOb3RpY2UgYW5kIExpY2Vuc2U6IGh0dHBzOi8vd3d3LnczLm9yZy9Db25zb3J0aXVtL0xlZ2FsLzIwMTUvY29weXJpZ2h0LXNvZnR3YXJlLWFuZC1kb2N1bWVudFxuICpcbiAqIFxuICovXG52YXIgZm9jdXNWaXNpYmxlQXR0cmlidXRlTmFtZSA9ICdkYXRhLWZvY3VzdmlzaWJsZS1wb2x5ZmlsbCc7XG52YXIgcnVsZSA9IFwiOmZvY3VzOm5vdChbXCIgKyBmb2N1c1Zpc2libGVBdHRyaWJ1dGVOYW1lICsgXCJdKXtvdXRsaW5lOiBub25lO31cIjtcblxudmFyIG1vZGFsaXR5ID0gZnVuY3Rpb24gbW9kYWxpdHkoaW5zZXJ0UnVsZSkge1xuICBpbnNlcnRSdWxlKHJ1bGUpO1xuXG4gIGlmICghX0V4ZWN1dGlvbkVudmlyb25tZW50LmNhblVzZURPTSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBoYWRLZXlib2FyZEV2ZW50ID0gdHJ1ZTtcbiAgdmFyIGhhZEZvY3VzVmlzaWJsZVJlY2VudGx5ID0gZmFsc2U7XG4gIHZhciBoYWRGb2N1c1Zpc2libGVSZWNlbnRseVRpbWVvdXQgPSBudWxsO1xuICB2YXIgaW5wdXRUeXBlc1doaXRlbGlzdCA9IHtcbiAgICB0ZXh0OiB0cnVlLFxuICAgIHNlYXJjaDogdHJ1ZSxcbiAgICB1cmw6IHRydWUsXG4gICAgdGVsOiB0cnVlLFxuICAgIGVtYWlsOiB0cnVlLFxuICAgIHBhc3N3b3JkOiB0cnVlLFxuICAgIG51bWJlcjogdHJ1ZSxcbiAgICBkYXRlOiB0cnVlLFxuICAgIG1vbnRoOiB0cnVlLFxuICAgIHdlZWs6IHRydWUsXG4gICAgdGltZTogdHJ1ZSxcbiAgICBkYXRldGltZTogdHJ1ZSxcbiAgICAnZGF0ZXRpbWUtbG9jYWwnOiB0cnVlXG4gIH07XG4gIC8qKlxuICAgKiBIZWxwZXIgZnVuY3Rpb24gZm9yIGxlZ2FjeSBicm93c2VycyBhbmQgaWZyYW1lcyB3aGljaCBzb21ldGltZXMgZm9jdXNcbiAgICogZWxlbWVudHMgbGlrZSBkb2N1bWVudCwgYm9keSwgYW5kIG5vbi1pbnRlcmFjdGl2ZSBTVkcuXG4gICAqL1xuXG4gIGZ1bmN0aW9uIGlzVmFsaWRGb2N1c1RhcmdldChlbCkge1xuICAgIGlmIChlbCAmJiBlbCAhPT0gZG9jdW1lbnQgJiYgZWwubm9kZU5hbWUgIT09ICdIVE1MJyAmJiBlbC5ub2RlTmFtZSAhPT0gJ0JPRFknICYmICdjbGFzc0xpc3QnIGluIGVsICYmICdjb250YWlucycgaW4gZWwuY2xhc3NMaXN0KSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgLyoqXG4gICAqIENvbXB1dGVzIHdoZXRoZXIgdGhlIGdpdmVuIGVsZW1lbnQgc2hvdWxkIGF1dG9tYXRpY2FsbHkgdHJpZ2dlciB0aGVcbiAgICogYGZvY3VzLXZpc2libGVgIGF0dHJpYnV0ZSBiZWluZyBhZGRlZCwgaS5lLiB3aGV0aGVyIGl0IHNob3VsZCBhbHdheXMgbWF0Y2hcbiAgICogYDpmb2N1cy12aXNpYmxlYCB3aGVuIGZvY3VzZWQuXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gZm9jdXNUcmlnZ2Vyc0tleWJvYXJkTW9kYWxpdHkoZWwpIHtcbiAgICB2YXIgdHlwZSA9IGVsLnR5cGU7XG4gICAgdmFyIHRhZ05hbWUgPSBlbC50YWdOYW1lO1xuICAgIHZhciBpc1JlYWRPbmx5ID0gZWwucmVhZE9ubHk7XG5cbiAgICBpZiAodGFnTmFtZSA9PT0gJ0lOUFVUJyAmJiBpbnB1dFR5cGVzV2hpdGVsaXN0W3R5cGVdICYmICFpc1JlYWRPbmx5KSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAodGFnTmFtZSA9PT0gJ1RFWFRBUkVBJyAmJiAhaXNSZWFkT25seSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgaWYgKGVsLmlzQ29udGVudEVkaXRhYmxlKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgLyoqXG4gICAqIEFkZCB0aGUgYGZvY3VzLXZpc2libGVgIGF0dHJpYnV0ZSB0byB0aGUgZ2l2ZW4gZWxlbWVudCBpZiBpdCB3YXMgbm90IGFkZGVkIGJ5XG4gICAqIHRoZSBhdXRob3IuXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gYWRkRm9jdXNWaXNpYmxlQXR0cmlidXRlKGVsKSB7XG4gICAgaWYgKGVsLmhhc0F0dHJpYnV0ZShmb2N1c1Zpc2libGVBdHRyaWJ1dGVOYW1lKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGVsLnNldEF0dHJpYnV0ZShmb2N1c1Zpc2libGVBdHRyaWJ1dGVOYW1lLCB0cnVlKTtcbiAgfVxuICAvKipcbiAgICogUmVtb3ZlIHRoZSBgZm9jdXMtdmlzaWJsZWAgYXR0cmlidXRlIGZyb20gdGhlIGdpdmVuIGVsZW1lbnQgaWYgaXQgd2FzIG5vdFxuICAgKiBvcmlnaW5hbGx5IGFkZGVkIGJ5IHRoZSBhdXRob3IuXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gcmVtb3ZlRm9jdXNWaXNpYmxlQXR0cmlidXRlKGVsKSB7XG4gICAgZWwucmVtb3ZlQXR0cmlidXRlKGZvY3VzVmlzaWJsZUF0dHJpYnV0ZU5hbWUpO1xuICB9XG4gIC8qKlxuICAgKiBSZW1vdmUgdGhlIGBmb2N1cy12aXNpYmxlYCBhdHRyaWJ1dGUgZnJvbSBhbGwgZWxlbWVudHMgaW4gdGhlIGRvY3VtZW50LlxuICAgKi9cblxuXG4gIGZ1bmN0aW9uIHJlbW92ZUFsbEZvY3VzVmlzaWJsZUF0dHJpYnV0ZXMoKSB7XG4gICAgdmFyIGxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW1wiICsgZm9jdXNWaXNpYmxlQXR0cmlidXRlTmFtZSArIFwiXVwiKTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgcmVtb3ZlRm9jdXNWaXNpYmxlQXR0cmlidXRlKGxpc3RbaV0pO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogVHJlYXQgYGtleWRvd25gIGFzIGEgc2lnbmFsIHRoYXQgdGhlIHVzZXIgaXMgaW4ga2V5Ym9hcmQgbW9kYWxpdHkuXG4gICAqIEFwcGx5IGBmb2N1cy12aXNpYmxlYCB0byBhbnkgY3VycmVudCBhY3RpdmUgZWxlbWVudCBhbmQga2VlcCB0cmFja1xuICAgKiBvZiBvdXIga2V5Ym9hcmQgbW9kYWxpdHkgc3RhdGUgd2l0aCBgaGFkS2V5Ym9hcmRFdmVudGAuXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gb25LZXlEb3duKGUpIHtcbiAgICBpZiAoZS5rZXkgIT09ICdUYWInICYmIChlLm1ldGFLZXkgfHwgZS5hbHRLZXkgfHwgZS5jdHJsS2V5IHx8IGUuc2hpZnRLZXkpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGlzVmFsaWRGb2N1c1RhcmdldChkb2N1bWVudC5hY3RpdmVFbGVtZW50KSkge1xuICAgICAgYWRkRm9jdXNWaXNpYmxlQXR0cmlidXRlKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpO1xuICAgIH1cblxuICAgIGhhZEtleWJvYXJkRXZlbnQgPSB0cnVlO1xuICB9XG4gIC8qKlxuICAgKiBJZiBhdCBhbnkgcG9pbnQgYSB1c2VyIGNsaWNrcyB3aXRoIGEgcG9pbnRpbmcgZGV2aWNlLCBlbnN1cmUgdGhhdCB3ZSBjaGFuZ2VcbiAgICogdGhlIG1vZGFsaXR5IGF3YXkgZnJvbSBrZXlib2FyZC5cbiAgICogVGhpcyBhdm9pZHMgdGhlIHNpdHVhdGlvbiB3aGVyZSBhIHVzZXIgcHJlc3NlcyBhIGtleSBvbiBhbiBhbHJlYWR5IGZvY3VzZWRcbiAgICogZWxlbWVudCwgYW5kIHRoZW4gY2xpY2tzIG9uIGEgZGlmZmVyZW50IGVsZW1lbnQsIGZvY3VzaW5nIGl0IHdpdGggYVxuICAgKiBwb2ludGluZyBkZXZpY2UsIHdoaWxlIHdlIHN0aWxsIHRoaW5rIHdlJ3JlIGluIGtleWJvYXJkIG1vZGFsaXR5LlxuICAgKiBJdCBhbHNvIGF2b2lkcyB0aGUgc2l0dWF0aW9uIHdoZXJlIGEgdXNlciBwcmVzc2VzIG9uIGFuIGVsZW1lbnQgd2l0aGluIGFcbiAgICogcHJldmlvdXNseSBrZXlib2FyZC1mb2N1c2VkIGVsZW1lbnQgKGkuZS4sIGBlLnRhcmdldGAgaXMgbm90IHRoZSBwcmV2aW91c2x5XG4gICAqIGZvY3VzZWQgZWxlbWVudCwgYnV0IG9uZSBvZiBpdHMgZGVzY2VuZGFudHMpIGFuZCB3ZSBuZWVkIHRvIHJlbW92ZSB0aGVcbiAgICogZm9jdXMgcmluZyBiZWNhdXNlIGEgYGJsdXJgIGV2ZW50IGRvZXNuJ3Qgb2NjdXIuXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gb25Qb2ludGVyRG93bihlKSB7XG4gICAgaWYgKGhhZEtleWJvYXJkRXZlbnQgPT09IHRydWUpIHtcbiAgICAgIHJlbW92ZUFsbEZvY3VzVmlzaWJsZUF0dHJpYnV0ZXMoKTtcbiAgICB9XG5cbiAgICBoYWRLZXlib2FyZEV2ZW50ID0gZmFsc2U7XG4gIH1cbiAgLyoqXG4gICAqIE9uIGBmb2N1c2AsIGFkZCB0aGUgYGZvY3VzLXZpc2libGVgIGF0dHJpYnV0ZSB0byB0aGUgdGFyZ2V0IGlmOlxuICAgKiAtIHRoZSB0YXJnZXQgcmVjZWl2ZWQgZm9jdXMgYXMgYSByZXN1bHQgb2Yga2V5Ym9hcmQgbmF2aWdhdGlvbiwgb3JcbiAgICogLSB0aGUgZXZlbnQgdGFyZ2V0IGlzIGFuIGVsZW1lbnQgdGhhdCB3aWxsIGxpa2VseSByZXF1aXJlIGludGVyYWN0aW9uXG4gICAqICAgdmlhIHRoZSBrZXlib2FyZCAoZS5nLiBhIHRleHQgYm94KVxuICAgKi9cblxuXG4gIGZ1bmN0aW9uIG9uRm9jdXMoZSkge1xuICAgIC8vIFByZXZlbnQgSUUgZnJvbSBmb2N1c2luZyB0aGUgZG9jdW1lbnQgb3IgSFRNTCBlbGVtZW50LlxuICAgIGlmICghaXNWYWxpZEZvY3VzVGFyZ2V0KGUudGFyZ2V0KSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChoYWRLZXlib2FyZEV2ZW50IHx8IGZvY3VzVHJpZ2dlcnNLZXlib2FyZE1vZGFsaXR5KGUudGFyZ2V0KSkge1xuICAgICAgYWRkRm9jdXNWaXNpYmxlQXR0cmlidXRlKGUudGFyZ2V0KTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIE9uIGBibHVyYCwgcmVtb3ZlIHRoZSBgZm9jdXMtdmlzaWJsZWAgYXR0cmlidXRlIGZyb20gdGhlIHRhcmdldC5cbiAgICovXG5cblxuICBmdW5jdGlvbiBvbkJsdXIoZSkge1xuICAgIGlmICghaXNWYWxpZEZvY3VzVGFyZ2V0KGUudGFyZ2V0KSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChlLnRhcmdldC5oYXNBdHRyaWJ1dGUoZm9jdXNWaXNpYmxlQXR0cmlidXRlTmFtZSkpIHtcbiAgICAgIC8vIFRvIGRldGVjdCBhIHRhYi93aW5kb3cgc3dpdGNoLCB3ZSBsb29rIGZvciBhIGJsdXIgZXZlbnQgZm9sbG93ZWRcbiAgICAgIC8vIHJhcGlkbHkgYnkgYSB2aXNpYmlsaXR5IGNoYW5nZS5cbiAgICAgIC8vIElmIHdlIGRvbid0IHNlZSBhIHZpc2liaWxpdHkgY2hhbmdlIHdpdGhpbiAxMDBtcywgaXQncyBwcm9iYWJseSBhXG4gICAgICAvLyByZWd1bGFyIGZvY3VzIGNoYW5nZS5cbiAgICAgIGhhZEZvY3VzVmlzaWJsZVJlY2VudGx5ID0gdHJ1ZTtcbiAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoaGFkRm9jdXNWaXNpYmxlUmVjZW50bHlUaW1lb3V0KTtcbiAgICAgIGhhZEZvY3VzVmlzaWJsZVJlY2VudGx5VGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaGFkRm9jdXNWaXNpYmxlUmVjZW50bHkgPSBmYWxzZTtcbiAgICAgICAgd2luZG93LmNsZWFyVGltZW91dChoYWRGb2N1c1Zpc2libGVSZWNlbnRseVRpbWVvdXQpO1xuICAgICAgfSwgMTAwKTtcbiAgICAgIHJlbW92ZUZvY3VzVmlzaWJsZUF0dHJpYnV0ZShlLnRhcmdldCk7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBJZiB0aGUgdXNlciBjaGFuZ2VzIHRhYnMsIGtlZXAgdHJhY2sgb2Ygd2hldGhlciBvciBub3QgdGhlIHByZXZpb3VzbHlcbiAgICogZm9jdXNlZCBlbGVtZW50IGhhZCB0aGUgZm9jdXMtdmlzaWJsZSBhdHRyaWJ1dGUuXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gb25WaXNpYmlsaXR5Q2hhbmdlKGUpIHtcbiAgICBpZiAoZG9jdW1lbnQudmlzaWJpbGl0eVN0YXRlID09PSAnaGlkZGVuJykge1xuICAgICAgLy8gSWYgdGhlIHRhYiBiZWNvbWVzIGFjdGl2ZSBhZ2FpbiwgdGhlIGJyb3dzZXIgd2lsbCBoYW5kbGUgY2FsbGluZyBmb2N1c1xuICAgICAgLy8gb24gdGhlIGVsZW1lbnQgKFNhZmFyaSBhY3R1YWxseSBjYWxscyBpdCB0d2ljZSkuXG4gICAgICAvLyBJZiB0aGlzIHRhYiBjaGFuZ2UgY2F1c2VkIGEgYmx1ciBvbiBhbiBlbGVtZW50IHdpdGggZm9jdXMtdmlzaWJsZSxcbiAgICAgIC8vIHJlLWFwcGx5IHRoZSBhdHRyaWJ1dGUgd2hlbiB0aGUgdXNlciBzd2l0Y2hlcyBiYWNrIHRvIHRoZSB0YWIuXG4gICAgICBpZiAoaGFkRm9jdXNWaXNpYmxlUmVjZW50bHkpIHtcbiAgICAgICAgaGFkS2V5Ym9hcmRFdmVudCA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIGFkZEluaXRpYWxQb2ludGVyTW92ZUxpc3RlbmVycygpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogQWRkIGEgZ3JvdXAgb2YgbGlzdGVuZXJzIHRvIGRldGVjdCB1c2FnZSBvZiBhbnkgcG9pbnRpbmcgZGV2aWNlcy5cbiAgICogVGhlc2UgbGlzdGVuZXJzIHdpbGwgYmUgYWRkZWQgd2hlbiB0aGUgcG9seWZpbGwgZmlyc3QgbG9hZHMsIGFuZCBhbnl0aW1lXG4gICAqIHRoZSB3aW5kb3cgaXMgYmx1cnJlZCwgc28gdGhhdCB0aGV5IGFyZSBhY3RpdmUgd2hlbiB0aGUgd2luZG93IHJlZ2FpbnNcbiAgICogZm9jdXMuXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gYWRkSW5pdGlhbFBvaW50ZXJNb3ZlTGlzdGVuZXJzKCkge1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIG9uSW5pdGlhbFBvaW50ZXJNb3ZlKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBvbkluaXRpYWxQb2ludGVyTW92ZSk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIG9uSW5pdGlhbFBvaW50ZXJNb3ZlKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdwb2ludGVybW92ZScsIG9uSW5pdGlhbFBvaW50ZXJNb3ZlKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdwb2ludGVyZG93bicsIG9uSW5pdGlhbFBvaW50ZXJNb3ZlKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdwb2ludGVydXAnLCBvbkluaXRpYWxQb2ludGVyTW92ZSk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgb25Jbml0aWFsUG9pbnRlck1vdmUpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBvbkluaXRpYWxQb2ludGVyTW92ZSk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCBvbkluaXRpYWxQb2ludGVyTW92ZSk7XG4gIH1cblxuICBmdW5jdGlvbiByZW1vdmVJbml0aWFsUG9pbnRlck1vdmVMaXN0ZW5lcnMoKSB7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgb25Jbml0aWFsUG9pbnRlck1vdmUpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIG9uSW5pdGlhbFBvaW50ZXJNb3ZlKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgb25Jbml0aWFsUG9pbnRlck1vdmUpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJtb3ZlJywgb25Jbml0aWFsUG9pbnRlck1vdmUpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJkb3duJywgb25Jbml0aWFsUG9pbnRlck1vdmUpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJ1cCcsIG9uSW5pdGlhbFBvaW50ZXJNb3ZlKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBvbkluaXRpYWxQb2ludGVyTW92ZSk7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIG9uSW5pdGlhbFBvaW50ZXJNb3ZlKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIG9uSW5pdGlhbFBvaW50ZXJNb3ZlKTtcbiAgfVxuICAvKipcbiAgICogV2hlbiB0aGUgcG9sZnlpbGwgZmlyc3QgbG9hZHMsIGFzc3VtZSB0aGUgdXNlciBpcyBpbiBrZXlib2FyZCBtb2RhbGl0eS5cbiAgICogSWYgYW55IGV2ZW50IGlzIHJlY2VpdmVkIGZyb20gYSBwb2ludGluZyBkZXZpY2UgKGUuZy4gbW91c2UsIHBvaW50ZXIsXG4gICAqIHRvdWNoKSwgdHVybiBvZmYga2V5Ym9hcmQgbW9kYWxpdHkuXG4gICAqIFRoaXMgYWNjb3VudHMgZm9yIHNpdHVhdGlvbnMgd2hlcmUgZm9jdXMgZW50ZXJzIHRoZSBwYWdlIGZyb20gdGhlIFVSTCBiYXIuXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gb25Jbml0aWFsUG9pbnRlck1vdmUoZSkge1xuICAgIC8vIFdvcmsgYXJvdW5kIGEgU2FmYXJpIHF1aXJrIHRoYXQgZmlyZXMgYSBtb3VzZW1vdmUgb24gPGh0bWw+IHdoZW5ldmVyIHRoZVxuICAgIC8vIHdpbmRvdyBibHVycywgZXZlbiBpZiB5b3UncmUgdGFiYmluZyBvdXQgb2YgdGhlIHBhZ2UuIMKvXFxfKOODhClfL8KvXG4gICAgaWYgKGUudGFyZ2V0Lm5vZGVOYW1lID09PSAnSFRNTCcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBoYWRLZXlib2FyZEV2ZW50ID0gZmFsc2U7XG4gICAgcmVtb3ZlSW5pdGlhbFBvaW50ZXJNb3ZlTGlzdGVuZXJzKCk7XG4gIH1cblxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgb25LZXlEb3duLCB0cnVlKTtcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgb25Qb2ludGVyRG93biwgdHJ1ZSk7XG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJkb3duJywgb25Qb2ludGVyRG93biwgdHJ1ZSk7XG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBvblBvaW50ZXJEb3duLCB0cnVlKTtcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXMnLCBvbkZvY3VzLCB0cnVlKTtcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsIG9uQmx1ciwgdHJ1ZSk7XG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Zpc2liaWxpdHljaGFuZ2UnLCBvblZpc2liaWxpdHlDaGFuZ2UsIHRydWUpO1xuICBhZGRJbml0aWFsUG9pbnRlck1vdmVMaXN0ZW5lcnMoKTtcbn07XG5cbnZhciBfZGVmYXVsdCA9IG1vZGFsaXR5O1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDsiXX0=